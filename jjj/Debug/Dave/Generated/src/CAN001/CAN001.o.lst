   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"CAN001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CAN001_lAllocateMOtoNodeList,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	CAN001_lAllocateMOtoNodeList:
  25              	.LFB112:
  26              		.file 1 "../Dave/Generated/src/CAN001/CAN001.c"
   1:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
   2:../Dave/Generated/src/CAN001/CAN001.c **** **  DAVE App Name : CAN001       App Version: 1.0.8               
   3:../Dave/Generated/src/CAN001/CAN001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/CAN001/CAN001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
   6:../Dave/Generated/src/CAN001/CAN001.c **** 
   7:../Dave/Generated/src/CAN001/CAN001.c **** /*CODE_BLOCK_BEGIN[CAN001.c]*/
   8:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
   9:../Dave/Generated/src/CAN001/CAN001.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  10:../Dave/Generated/src/CAN001/CAN001.c ****  All rights reserved.                                                         **
  11:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  12:../Dave/Generated/src/CAN001/CAN001.c ****  Redistribution and use in source and binary forms, with or without           **
  13:../Dave/Generated/src/CAN001/CAN001.c ****  modification,are permitted provided that the following conditions are met:   **
  14:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  15:../Dave/Generated/src/CAN001/CAN001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  16:../Dave/Generated/src/CAN001/CAN001.c ****  this list of conditions and the following disclaimer.                        **
  17:../Dave/Generated/src/CAN001/CAN001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  18:../Dave/Generated/src/CAN001/CAN001.c ****  this list of conditions and the following disclaimer in the documentation    **
  19:../Dave/Generated/src/CAN001/CAN001.c ****  and/or other materials provided with the distribution.                       **
  20:../Dave/Generated/src/CAN001/CAN001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  21:../Dave/Generated/src/CAN001/CAN001.c ****  may be used to endorse or promote products derived from this software without** 
  22:../Dave/Generated/src/CAN001/CAN001.c ****  specific prior written permission.                                           **
  23:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  24:../Dave/Generated/src/CAN001/CAN001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  25:../Dave/Generated/src/CAN001/CAN001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  26:../Dave/Generated/src/CAN001/CAN001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  27:../Dave/Generated/src/CAN001/CAN001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  28:../Dave/Generated/src/CAN001/CAN001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  29:../Dave/Generated/src/CAN001/CAN001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  30:../Dave/Generated/src/CAN001/CAN001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  31:../Dave/Generated/src/CAN001/CAN001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  32:../Dave/Generated/src/CAN001/CAN001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  33:../Dave/Generated/src/CAN001/CAN001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  34:../Dave/Generated/src/CAN001/CAN001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  35:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  36:../Dave/Generated/src/CAN001/CAN001.c ****  To improve the quality of the software, users are encouraged to share        **
  37:../Dave/Generated/src/CAN001/CAN001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  38:../Dave/Generated/src/CAN001/CAN001.c ****  dave@infineon.com).                                                          **
  39:../Dave/Generated/src/CAN001/CAN001.c ****                                                                               **
  40:../Dave/Generated/src/CAN001/CAN001.c **** ********************************************************************************
  41:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  42:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  43:../Dave/Generated/src/CAN001/CAN001.c **** ** PLATFORM : Infineon XMC4000 Series   			              **
  44:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  45:../Dave/Generated/src/CAN001/CAN001.c **** ** COMPILER : Compiler Independent                                            **
  46:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  47:../Dave/Generated/src/CAN001/CAN001.c **** ** AUTHOR   : App Developer                                                   **
  48:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  49:../Dave/Generated/src/CAN001/CAN001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  50:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  51:../Dave/Generated/src/CAN001/CAN001.c **** ** MODIFICATION DATE : Aug 22, 2013                                           **
  52:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  53:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
  54:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
  55:../Dave/Generated/src/CAN001/CAN001.c **** **                      Author(s) Identity                                    **
  56:../Dave/Generated/src/CAN001/CAN001.c **** ********************************************************************************
  57:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  58:../Dave/Generated/src/CAN001/CAN001.c **** ** Initials     Name                                                          **
  59:../Dave/Generated/src/CAN001/CAN001.c **** ** ---------------------------------------------------------------------------**
  60:../Dave/Generated/src/CAN001/CAN001.c **** ** NPJ        App Developer                                                   **
  61:../Dave/Generated/src/CAN001/CAN001.c **** **                                                                            **
  62:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
  63:../Dave/Generated/src/CAN001/CAN001.c **** /*
  64:../Dave/Generated/src/CAN001/CAN001.c **** * Version History : 
  65:../Dave/Generated/src/CAN001/CAN001.c **** * 12 Dec 2012	 v1.0.2	  1. Initial revision		  								 
  66:../Dave/Generated/src/CAN001/CAN001.c **** *                                                                          
  67:../Dave/Generated/src/CAN001/CAN001.c **** * 30 May 2013	 v1.0.4	  1. MISRA fixes.
  68:../Dave/Generated/src/CAN001/CAN001.c **** *                         2. Fixes concerned with the Rx pin(14.3) manual configuration issue. 
  69:../Dave/Generated/src/CAN001/CAN001.c **** *   
  70:../Dave/Generated/src/CAN001/CAN001.c **** * 21 Jun 2013    v1.0.6   1. Reset of INIT & CCE bit has been removed as it shall be handled in   
  71:../Dave/Generated/src/CAN001/CAN001.c **** *                            MULTIPLEXER.c file of DaveSupport app.
  72:../Dave/Generated/src/CAN001/CAN001.c **** *                         2. Removed the code concerned with PORTx_PDRx & PORTx_IOCRx register modi
  73:../Dave/Generated/src/CAN001/CAN001.c **** * 22 Aug 2013    v1.0.8   1. Fixes w.r.t incorrect code generation of the CAN NodeId due to multipl
  74:../Dave/Generated/src/CAN001/CAN001.c **** *                            reference created by the data model to a proxy register
  75:../Dave/Generated/src/CAN001/CAN001.c **** */
  76:../Dave/Generated/src/CAN001/CAN001.c **** /**
  77:../Dave/Generated/src/CAN001/CAN001.c ****  * @file   CAN001.c
  78:../Dave/Generated/src/CAN001/CAN001.c ****  * 
  79:../Dave/Generated/src/CAN001/CAN001.c ****  * @App Version CAN001 <1.0.8>
  80:../Dave/Generated/src/CAN001/CAN001.c ****  *
  81:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief  CAN_Basic_CAN001 App provides non reentrant API's to configure the 
  82:../Dave/Generated/src/CAN001/CAN001.c ****  *         CAN Nodes which can be used in a non RTOS environment. It provides 
  83:../Dave/Generated/src/CAN001/CAN001.c ****  *         simple APIs to Configure CAN Nodes and to Send /Receive CAN Message 
  84:../Dave/Generated/src/CAN001/CAN001.c ****  *         objects.
  85:../Dave/Generated/src/CAN001/CAN001.c ****  *
  86:../Dave/Generated/src/CAN001/CAN001.c ****  */
  87:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
  88:../Dave/Generated/src/CAN001/CAN001.c ****  ** INCLUDE FILES                                                             **
  89:../Dave/Generated/src/CAN001/CAN001.c ****  ******************************************************************************/
  90:../Dave/Generated/src/CAN001/CAN001.c **** 
  91:../Dave/Generated/src/CAN001/CAN001.c **** /** Inclusion of header file */
  92:../Dave/Generated/src/CAN001/CAN001.c **** #include <DAVE3.h>
  93:../Dave/Generated/src/CAN001/CAN001.c **** 
  94:../Dave/Generated/src/CAN001/CAN001.c ****   
  95:../Dave/Generated/src/CAN001/CAN001.c **** /*****************************************************************************
  96:../Dave/Generated/src/CAN001/CAN001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
  97:../Dave/Generated/src/CAN001/CAN001.c **** *****************************************************************************/
  98:../Dave/Generated/src/CAN001/CAN001.c **** /*****************************************************************************
  99:../Dave/Generated/src/CAN001/CAN001.c ****               DUMMY DEFINTIONS OF DEBUG LOG MACROS
 100:../Dave/Generated/src/CAN001/CAN001.c **** *****************************************************************************/
 101:../Dave/Generated/src/CAN001/CAN001.c **** /*These definitions are included here to avoid compilation errors,
 102:../Dave/Generated/src/CAN001/CAN001.c ****  since the DBG002 app is not part of the project. All the macros are defined
 103:../Dave/Generated/src/CAN001/CAN001.c ****  as empty*/ 
 104:../Dave/Generated/src/CAN001/CAN001.c **** #ifndef _DBG002_H_
 105:../Dave/Generated/src/CAN001/CAN001.c **** 
 106:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_RegisterCallBack(A,B,C)
 107:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_I(e) 
 108:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IG(e,g) 
 109:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IH(e,h) 
 110:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IP(e,p) 
 111:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGH(e,g,h) 
 112:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGP(e,g,p) 
 113:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IHP(e,h,p) 
 114:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IGHP(e,g,h,p) 
 115:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_N(e) 
 116:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NG(e,g) 
 117:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NH(e,h) 
 118:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NP(e,p) 
 119:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGH(e,g,h) 
 120:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGP(e,g,p) 
 121:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NHP(e,h,p) 
 122:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_NGHP(e,g,h,p) 
 123:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ID(e) 
 124:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_IS(e) 
 125:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ISG(e,g) 
 126:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_SAFETY_CRITICAL(groupid,messageid,length,value)
 127:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_CRITICAL(groupid,messageid,length,value)
 128:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_ERROR(groupid,messageid,length,value)
 129:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_WARNING(groupid,messageid,length,value)
 130:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_INFO(groupid,messageid,length,value)
 131:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_TRACE(groupid,messageid,length,value)
 132:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_FUNCTION_ENTRY(GID, Status) 
 133:../Dave/Generated/src/CAN001/CAN001.c **** #define DBG002_FUNCTION_EXIT(GID, Status) 
 134:../Dave/Generated/src/CAN001/CAN001.c **** 
 135:../Dave/Generated/src/CAN001/CAN001.c **** #endif/* End of defintions of dummy Debug Log macros*/                  
 136:../Dave/Generated/src/CAN001/CAN001.c **** 
 137:../Dave/Generated/src/CAN001/CAN001.c **** 
 138:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 139:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Macro Definitions                             **
 140:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 141:../Dave/Generated/src/CAN001/CAN001.c **** #define APP_GID DBG002_GID_CAN001
 142:../Dave/Generated/src/CAN001/CAN001.c **** 
 143:../Dave/Generated/src/CAN001/CAN001.c **** /* message objects status mask */
 144:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_CLEAR_MO_STATUS_MASK    (0x0000001BU)
 145:../Dave/Generated/src/CAN001/CAN001.c **** /* Node Status mask */
 146:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_CLEAR_NODE_STATUS_MASK  (0x000003E0U)
 147:../Dave/Generated/src/CAN001/CAN001.c **** /* Macro to Enable */
 148:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_LIST_BEGIN_BITMASK (0x000000FFU)
 149:../Dave/Generated/src/CAN001/CAN001.c **** /* Panel command for dynamic MO allocation */
 150:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_PANCMD_STATIC_MO_ALLOC (0x00000002U)
 151:../Dave/Generated/src/CAN001/CAN001.c **** /* Panel command for MO deallocation */
 152:../Dave/Generated/src/CAN001/CAN001.c **** #define CAN001_PANCMD_DYN_MO_DEALLOC (0x00000004U)
 153:../Dave/Generated/src/CAN001/CAN001.c **** 
 154:../Dave/Generated/src/CAN001/CAN001.c **** 
 155:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 156:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Type Definitions                              **
 157:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 158:../Dave/Generated/src/CAN001/CAN001.c **** 
 159:../Dave/Generated/src/CAN001/CAN001.c **** 
 160:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 161:../Dave/Generated/src/CAN001/CAN001.c **** **                 Private Function Declarations:
 162:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 163:../Dave/Generated/src/CAN001/CAN001.c **** /**
 164:../Dave/Generated/src/CAN001/CAN001.c ****  * @ingroup CAN001_privatefunc
 165:../Dave/Generated/src/CAN001/CAN001.c ****  * @{
 166:../Dave/Generated/src/CAN001/CAN001.c ****  */
 167:../Dave/Generated/src/CAN001/CAN001.c ****  
 168:../Dave/Generated/src/CAN001/CAN001.c **** /**
 169:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to allocate message object from free list to node list
 170:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 171:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  List Node list no
 172:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjnr Message object number to be allocated to node list
 173:../Dave/Generated/src/CAN001/CAN001.c ****  *
 174:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     status_t 
 175:../Dave/Generated/src/CAN001/CAN001.c ****  *             MO number allocated
 176:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 177:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 178:../Dave/Generated/src/CAN001/CAN001.c ****  *
 179:../Dave/Generated/src/CAN001/CAN001.c ****  */
 180:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lAllocateMOtoNodeList(uint8_t List,uint8_t MsgObjnr);
 181:../Dave/Generated/src/CAN001/CAN001.c **** 
 182:../Dave/Generated/src/CAN001/CAN001.c **** /**
 183:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to deallocate MO from Node list to free list
 184:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 185:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[inout]  MsgObjnr Message object number to be deallocated to free list
 186:../Dave/Generated/src/CAN001/CAN001.c ****  *
 187:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 188:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 189:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 190:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 191:../Dave/Generated/src/CAN001/CAN001.c ****  *
 192:../Dave/Generated/src/CAN001/CAN001.c ****  */
 193:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lDeallocateMsgObj(uint32_t MsgObjnr);
 194:../Dave/Generated/src/CAN001/CAN001.c **** 
 195:../Dave/Generated/src/CAN001/CAN001.c **** /**
 196:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to configure message object registers
 197:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 198:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjptr Pointer to message object data structure
 199:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in]  MsgObjnr Actual message object number
 200:../Dave/Generated/src/CAN001/CAN001.c ****  *
 201:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 202:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 203:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 204:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 205:../Dave/Generated/src/CAN001/CAN001.c ****  *
 206:../Dave/Generated/src/CAN001/CAN001.c ****  */
 207:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lConfigMORegs
 208:../Dave/Generated/src/CAN001/CAN001.c **** (
 209:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_MessageHandleType* MsgObjptr,
 210:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 211:../Dave/Generated/src/CAN001/CAN001.c **** );
 212:../Dave/Generated/src/CAN001/CAN001.c **** 
 213:../Dave/Generated/src/CAN001/CAN001.c **** 
 214:../Dave/Generated/src/CAN001/CAN001.c **** /**
 215:../Dave/Generated/src/CAN001/CAN001.c ****  * @brief      Function to initialize node as per UI configuration
 216:../Dave/Generated/src/CAN001/CAN001.c ****  *              
 217:../Dave/Generated/src/CAN001/CAN001.c ****  * @param[in] Handle Node configuration structure
 218:../Dave/Generated/src/CAN001/CAN001.c ****  *
 219:../Dave/Generated/src/CAN001/CAN001.c ****  * @return     void
 220:../Dave/Generated/src/CAN001/CAN001.c ****  *            
 221:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Reentrant: NO </b><BR>
 222:../Dave/Generated/src/CAN001/CAN001.c ****  * <b>Sync/Async:  Synchronous</b>
 223:../Dave/Generated/src/CAN001/CAN001.c ****  *
 224:../Dave/Generated/src/CAN001/CAN001.c ****  */
 225:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lNodeInit(const CAN001_HandleType* Handle);
 226:../Dave/Generated/src/CAN001/CAN001.c **** /**
 227:../Dave/Generated/src/CAN001/CAN001.c ****  *@}
 228:../Dave/Generated/src/CAN001/CAN001.c ****  */
 229:../Dave/Generated/src/CAN001/CAN001.c **** 
 230:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 231:../Dave/Generated/src/CAN001/CAN001.c **** **                      Global Constant Definitions                           **
 232:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 233:../Dave/Generated/src/CAN001/CAN001.c **** 
 234:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 235:../Dave/Generated/src/CAN001/CAN001.c **** **                      Global Variable Definitions                           **
 236:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 237:../Dave/Generated/src/CAN001/CAN001.c **** 
 238:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 239:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Constant Definitions                          **
 240:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 241:../Dave/Generated/src/CAN001/CAN001.c **** 
 242:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 243:../Dave/Generated/src/CAN001/CAN001.c **** **                 Function like macro definitions                            **
 244:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 245:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 246:../Dave/Generated/src/CAN001/CAN001.c **** **                      Private Function Definitions                          **
 247:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 248:../Dave/Generated/src/CAN001/CAN001.c **** 
 249:../Dave/Generated/src/CAN001/CAN001.c **** 
 250:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to allocate message object from free list to node list */
 251:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lAllocateMOtoNodeList(uint8_t List, uint8_t MsgObjnr)
 252:../Dave/Generated/src/CAN001/CAN001.c **** {
  27              		.loc 1 252 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 4
  35              		.cfi_offset 7, -4
  36 0002 83B0     		sub	sp, sp, #12
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              	.LCFI2:
  41              		.cfi_def_cfa_register 7
  42 0006 0246     		mov	r2, r0
  43 0008 0B46     		mov	r3, r1
  44 000a FA71     		strb	r2, [r7, #7]
  45 000c BB71     		strb	r3, [r7, #6]
 253:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_1>>> */
 254:../Dave/Generated/src/CAN001/CAN001.c ****   /* Panel Command for dynamic allocation of MO to node list */
 255:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  46              		.loc 1 255 0
  47 000e 4FF48043 		mov	r3, #16384
  48 0012 C4F60103 		movt	r3, 18433
  49 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  50 0018 02F10102 		add	r2, r2, #1
  51 001c 4FEA0261 		lsl	r1, r2, #24
 256:../Dave/Generated/src/CAN001/CAN001.c **** 		                   ((uint32_t)MsgObjnr << CAN_PANCTR_PANAR1_Pos) | \
  52              		.loc 1 256 0
  53 0020 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  54 0022 4FEA0242 		lsl	r2, r2, #16
 255:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  55              		.loc 1 255 0
  56 0026 0A43     		orrs	r2, r2, r1
  57              		.loc 1 256 0
  58 0028 42F00202 		orr	r2, r2, #2
 255:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((((uint32_t)List + 1U) << CAN_PANCTR_PANAR2_Pos)| \
  59              		.loc 1 255 0
  60 002c C3F8C421 		str	r2, [r3, #452]
 257:../Dave/Generated/src/CAN001/CAN001.c ****                            (CAN001_PANCMD_STATIC_MO_ALLOC));
 258:../Dave/Generated/src/CAN001/CAN001.c ****   /* wait until panel as done the command */
 259:../Dave/Generated/src/CAN001/CAN001.c ****   while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
  61              		.loc 1 259 0
  62 0030 00BF     		nop
  63              	.L2:
  64              		.loc 1 259 0 is_stmt 0 discriminator 1
  65 0032 4FF48043 		mov	r3, #16384
  66 0036 C4F60103 		movt	r3, 18433
  67 003a D3F8C431 		ldr	r3, [r3, #452]
  68 003e 03F48073 		and	r3, r3, #256
  69 0042 002B     		cmp	r3, #0
  70 0044 F5D1     		bne	.L2
 260:../Dave/Generated/src/CAN001/CAN001.c ****   {}
 261:../Dave/Generated/src/CAN001/CAN001.c **** }
  71              		.loc 1 261 0 is_stmt 1
  72 0046 07F10C07 		add	r7, r7, #12
  73 004a BD46     		mov	sp, r7
  74 004c 80BC     		pop	{r7}
  75 004e 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE112:
  79              		.section	.text.CAN001_lDeallocateMsgObj,"ax",%progbits
  80              		.align	2
  81              		.thumb
  82              		.thumb_func
  84              	CAN001_lDeallocateMsgObj:
  85              	.LFB113:
 262:../Dave/Generated/src/CAN001/CAN001.c **** 
 263:../Dave/Generated/src/CAN001/CAN001.c **** 
 264:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to deallocate MO from Node list to free list */ 
 265:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lDeallocateMsgObj(uint32_t MsgObjnr)
 266:../Dave/Generated/src/CAN001/CAN001.c **** { 
  86              		.loc 1 266 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91 0000 80B4     		push	{r7}
  92              	.LCFI3:
  93              		.cfi_def_cfa_offset 4
  94              		.cfi_offset 7, -4
  95 0002 85B0     		sub	sp, sp, #20
  96              	.LCFI4:
  97              		.cfi_def_cfa_offset 24
  98 0004 00AF     		add	r7, sp, #0
  99              	.LCFI5:
 100              		.cfi_def_cfa_register 7
 101 0006 7860     		str	r0, [r7, #4]
 267:../Dave/Generated/src/CAN001/CAN001.c **** 	uint32_t FirstMoInList0 = 0U;
 102              		.loc 1 267 0
 103 0008 4FF00003 		mov	r3, #0
 104 000c FB60     		str	r3, [r7, #12]
 268:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_2>>> */
 269:../Dave/Generated/src/CAN001/CAN001.c ****   FirstMoInList0 = (CAN->LIST[0] & CAN001_LIST_BEGIN_BITMASK);
 105              		.loc 1 269 0
 106 000e 4FF48043 		mov	r3, #16384
 107 0012 C4F60103 		movt	r3, 18433
 108 0016 D3F80031 		ldr	r3, [r3, #256]
 109 001a DBB2     		uxtb	r3, r3
 110 001c FB60     		str	r3, [r7, #12]
 270:../Dave/Generated/src/CAN001/CAN001.c ****   /* Panel Command for deallocation of MO from Node List */
 271:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 111              		.loc 1 271 0
 112 001e 4FF48043 		mov	r3, #16384
 113 0022 C4F60103 		movt	r3, 18433
 114 0026 FA68     		ldr	r2, [r7, #12]
 115 0028 4FEA0261 		lsl	r1, r2, #24
 272:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)MsgObjnr << CAN_PANCTR_PANAR1_Pos) | \
 116              		.loc 1 272 0
 117 002c 7A68     		ldr	r2, [r7, #4]
 118 002e 4FEA0242 		lsl	r2, r2, #16
 271:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 119              		.loc 1 271 0
 120 0032 0A43     		orrs	r2, r2, r1
 121              		.loc 1 272 0
 122 0034 42F00402 		orr	r2, r2, #4
 271:../Dave/Generated/src/CAN001/CAN001.c ****   CAN->PANCTR = ((FirstMoInList0 << CAN_PANCTR_PANAR2_Pos)| \
 123              		.loc 1 271 0
 124 0038 C3F8C421 		str	r2, [r3, #452]
 273:../Dave/Generated/src/CAN001/CAN001.c ****                            (CAN001_PANCMD_DYN_MO_DEALLOC));
 274:../Dave/Generated/src/CAN001/CAN001.c ****     /* wait until panel as done the command */
 275:../Dave/Generated/src/CAN001/CAN001.c ****    while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
 125              		.loc 1 275 0
 126 003c 00BF     		nop
 127              	.L4:
 128              		.loc 1 275 0 is_stmt 0 discriminator 1
 129 003e 4FF48043 		mov	r3, #16384
 130 0042 C4F60103 		movt	r3, 18433
 131 0046 D3F8C431 		ldr	r3, [r3, #452]
 132 004a 03F48073 		and	r3, r3, #256
 133 004e 002B     		cmp	r3, #0
 134 0050 F5D1     		bne	.L4
 276:../Dave/Generated/src/CAN001/CAN001.c ****     {}
 277:../Dave/Generated/src/CAN001/CAN001.c **** }
 135              		.loc 1 277 0 is_stmt 1
 136 0052 07F11407 		add	r7, r7, #20
 137 0056 BD46     		mov	sp, r7
 138 0058 80BC     		pop	{r7}
 139 005a 7047     		bx	lr
 140              		.cfi_endproc
 141              	.LFE113:
 143              		.section	.text.CAN001_lConfigMORegs,"ax",%progbits
 144              		.align	2
 145              		.thumb
 146              		.thumb_func
 148              	CAN001_lConfigMORegs:
 149              	.LFB114:
 278:../Dave/Generated/src/CAN001/CAN001.c **** 
 279:../Dave/Generated/src/CAN001/CAN001.c **** /* Function to configure message object registers */
 280:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lConfigMORegs(const CAN001_MessageHandleType* MsgObjptr, uint8_t MsgObjnr)
 281:../Dave/Generated/src/CAN001/CAN001.c **** { 
 150              		.loc 1 281 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 16
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154              		@ link register save eliminated.
 155 0000 80B4     		push	{r7}
 156              	.LCFI6:
 157              		.cfi_def_cfa_offset 4
 158              		.cfi_offset 7, -4
 159 0002 85B0     		sub	sp, sp, #20
 160              	.LCFI7:
 161              		.cfi_def_cfa_offset 24
 162 0004 00AF     		add	r7, sp, #0
 163              	.LCFI8:
 164              		.cfi_def_cfa_register 7
 165 0006 7860     		str	r0, [r7, #4]
 166 0008 0B46     		mov	r3, r1
 167 000a FB70     		strb	r3, [r7, #3]
 282:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MO_TypeDef* CAN_MOxRegs = GET_MO_OFFSET(MsgObjnr);
 168              		.loc 1 282 0
 169 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 170 000e 03F11073 		add	r3, r3, #37748736
 171 0012 03F52863 		add	r3, r3, #2688
 172 0016 4FEA4313 		lsl	r3, r3, #5
 173 001a BB60     		str	r3, [r7, #8]
 283:../Dave/Generated/src/CAN001/CAN001.c **** 	  uint32_t Count = 0U;
 174              		.loc 1 283 0
 175 001c 4FF00003 		mov	r3, #0
 176 0020 FB60     		str	r3, [r7, #12]
 284:../Dave/Generated/src/CAN001/CAN001.c **** 	  /* <<<DD_CAN001_nonAPI_3>>> */  
 285:../Dave/Generated/src/CAN001/CAN001.c ****     /* Disable Message object */
 286:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;   
 177              		.loc 1 286 0
 178 0022 BB68     		ldr	r3, [r7, #8]
 179 0024 4FF02002 		mov	r2, #32
 180 0028 DA61     		str	r2, [r3, #28]
 287:../Dave/Generated/src/CAN001/CAN001.c ****     if ((CAN_FrameType)MsgObjptr->IDExten == STANDARDTYPE)
 181              		.loc 1 287 0
 182 002a 7B68     		ldr	r3, [r7, #4]
 183 002c 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 184 002e 002B     		cmp	r3, #0
 185 0030 25D1     		bne	.L6
 288:../Dave/Generated/src/CAN001/CAN001.c ****     {
 289:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure standard identifier and identifier mask*/
 290:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 291:../Dave/Generated/src/CAN001/CAN001.c ****                            (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 292:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)(MsgObjptr->Identifier << CAN_MO_MOAR_STDID_Pos) \
 186              		.loc 1 292 0
 187 0032 7B68     		ldr	r3, [r7, #4]
 188 0034 1B68     		ldr	r3, [r3, #0]
 189 0036 4FEA8342 		lsl	r2, r3, #18
 293:../Dave/Generated/src/CAN001/CAN001.c ****                            & (uint32_t)CAN_MO_MOAR_STDID_Msk));
 190              		.loc 1 293 0
 191 003a 4FF00003 		mov	r3, #0
 192 003e C1F6FC73 		movt	r3, 8188
 193 0042 1340     		ands	r3, r3, r2
 291:../Dave/Generated/src/CAN001/CAN001.c ****                            (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 194              		.loc 1 291 0
 195 0044 43F00042 		orr	r2, r3, #-2147483648
 290:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 196              		.loc 1 290 0
 197 0048 BB68     		ldr	r3, [r7, #8]
 198 004a 9A61     		str	r2, [r3, #24]
 294:../Dave/Generated/src/CAN001/CAN001.c ****       if(MsgObjptr->IDEMask == 1U)
 199              		.loc 1 294 0
 200 004c 7B68     		ldr	r3, [r7, #4]
 201 004e 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 202 0050 012B     		cmp	r3, #1
 203 0052 0DD1     		bne	.L7
 295:../Dave/Generated/src/CAN001/CAN001.c ****       {
 296:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)1UL << CAN_MO_MOAMR_MIDE_Pos) & \
 297:../Dave/Generated/src/CAN001/CAN001.c ****         		             (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 298:../Dave/Generated/src/CAN001/CAN001.c ****                             ((uint32_t)(MsgObjptr->IDMask << CAN_MO_MOAR_STDID_Pos) \
 204              		.loc 1 298 0
 205 0054 7B68     		ldr	r3, [r7, #4]
 206 0056 5B68     		ldr	r3, [r3, #4]
 207 0058 4FEA8342 		lsl	r2, r3, #18
 299:../Dave/Generated/src/CAN001/CAN001.c ****                             & (uint32_t)CAN_MO_MOAR_STDID_Msk));
 208              		.loc 1 299 0
 209 005c 4FF00003 		mov	r3, #0
 210 0060 C1F6FC73 		movt	r3, 8188
 211 0064 1340     		ands	r3, r3, r2
 297:../Dave/Generated/src/CAN001/CAN001.c ****         		             (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 212              		.loc 1 297 0
 213 0066 43F00052 		orr	r2, r3, #536870912
 296:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)1UL << CAN_MO_MOAMR_MIDE_Pos) & \
 214              		.loc 1 296 0
 215 006a BB68     		ldr	r3, [r7, #8]
 216 006c DA60     		str	r2, [r3, #12]
 217 006e 1BE0     		b	.L8
 218              	.L7:
 300:../Dave/Generated/src/CAN001/CAN001.c ****       }
 301:../Dave/Generated/src/CAN001/CAN001.c ****       else
 302:../Dave/Generated/src/CAN001/CAN001.c ****       {
 303:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)0UL << CAN_MO_MOAMR_MIDE_Pos) & \
 304:../Dave/Generated/src/CAN001/CAN001.c ****         		           (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 305:../Dave/Generated/src/CAN001/CAN001.c ****                             ((uint32_t)CAN_MO_MOAMR_AM_Msk & (uint32_t)MsgObjptr->IDMask));
 219              		.loc 1 305 0
 220 0070 7B68     		ldr	r3, [r7, #4]
 221 0072 5B68     		ldr	r3, [r3, #4]
 304:../Dave/Generated/src/CAN001/CAN001.c ****         		           (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 222              		.loc 1 304 0
 223 0074 23F06042 		bic	r2, r3, #-536870912
 303:../Dave/Generated/src/CAN001/CAN001.c ****         CAN_MOxRegs->MOAMR = ((((uint32_t)0UL << CAN_MO_MOAMR_MIDE_Pos) & \
 224              		.loc 1 303 0
 225 0078 BB68     		ldr	r3, [r7, #8]
 226 007a DA60     		str	r2, [r3, #12]
 227 007c 14E0     		b	.L8
 228              	.L6:
 306:../Dave/Generated/src/CAN001/CAN001.c ****       }                      
 307:../Dave/Generated/src/CAN001/CAN001.c ****     } /* if (MsgObjptr->IDExten == STANDARDTYPE) */
 308:../Dave/Generated/src/CAN001/CAN001.c ****     else
 309:../Dave/Generated/src/CAN001/CAN001.c ****     {
 310:../Dave/Generated/src/CAN001/CAN001.c ****         /* Configure Extended identifier and identifier mask*/
 311:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 312:../Dave/Generated/src/CAN001/CAN001.c ****     		                (uint32_t)CAN_MO_MOAR_PRI_Msk) | \
 313:../Dave/Generated/src/CAN001/CAN001.c ****                            ((uint32_t)(CAN_MO_MOAR_ID_Msk & MsgObjptr->Identifier)) | \
 229              		.loc 1 313 0
 230 007e 7B68     		ldr	r3, [r7, #4]
 231 0080 1B68     		ldr	r3, [r3, #0]
 232 0082 23F06043 		bic	r3, r3, #-536870912
 233 0086 43F02042 		orr	r2, r3, #-1610612736
 311:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAR = ((((uint32_t)2UL << CAN_MO_MOAR_PRI_Pos) & \
 234              		.loc 1 311 0
 235 008a BB68     		ldr	r3, [r7, #8]
 236 008c 9A61     		str	r2, [r3, #24]
 314:../Dave/Generated/src/CAN001/CAN001.c ****                             (((uint32_t)1UL << CAN_MO_MOAR_IDE_Pos ) & \
 315:../Dave/Generated/src/CAN001/CAN001.c ****                             		(uint32_t)CAN_MO_MOAR_IDE_Msk));
 316:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAMR = (((uint32_t)((uint32_t)MsgObjptr->IDEMask << CAN_MO_MOAMR_MIDE_Pos) & \
 237              		.loc 1 316 0
 238 008e 7B68     		ldr	r3, [r7, #4]
 239 0090 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 240 0092 4FEA4373 		lsl	r3, r3, #29
 241 0096 03F00052 		and	r2, r3, #536870912
 317:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 318:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)(CAN_MO_MOAMR_AM_Msk & MsgObjptr->IDMask));
 242              		.loc 1 318 0
 243 009a 7B68     		ldr	r3, [r7, #4]
 244 009c 5B68     		ldr	r3, [r3, #4]
 245 009e 23F06043 		bic	r3, r3, #-536870912
 317:../Dave/Generated/src/CAN001/CAN001.c ****     		  (uint32_t)CAN_MO_MOAMR_MIDE_Msk) | \
 246              		.loc 1 317 0
 247 00a2 1A43     		orrs	r2, r2, r3
 316:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOAMR = (((uint32_t)((uint32_t)MsgObjptr->IDEMask << CAN_MO_MOAMR_MIDE_Pos) & \
 248              		.loc 1 316 0
 249 00a4 BB68     		ldr	r3, [r7, #8]
 250 00a6 DA60     		str	r2, [r3, #12]
 251              	.L8:
 319:../Dave/Generated/src/CAN001/CAN001.c ****     }
 320:../Dave/Generated/src/CAN001/CAN001.c ****       /* Check whether message object is transmit message object */
 321:../Dave/Generated/src/CAN001/CAN001.c ****       /*<<<DD_CAN001_API_3_2>>>*/
 322:../Dave/Generated/src/CAN001/CAN001.c ****     if (MsgObjptr->MsgObjType == TRANSMSGOBJ)
 252              		.loc 1 322 0
 253 00a8 7B68     		ldr	r3, [r7, #4]
 254 00aa 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 255 00ac 012B     		cmp	r3, #1
 256 00ae 77D1     		bne	.L9
 323:../Dave/Generated/src/CAN001/CAN001.c ****   
 324:../Dave/Generated/src/CAN001/CAN001.c ****     {
 325:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure data length */
 326:../Dave/Generated/src/CAN001/CAN001.c ****       WR_REG(CAN_MOxRegs->MOFCR, (uint32_t)CAN_MO_MOFCR_DLC_Msk, \
 257              		.loc 1 326 0
 258 00b0 7B68     		ldr	r3, [r7, #4]
 259 00b2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 260 00b4 4FEA0363 		lsl	r3, r3, #24
 261 00b8 03F07062 		and	r2, r3, #251658240
 262 00bc BB68     		ldr	r3, [r7, #8]
 263 00be 1B68     		ldr	r3, [r3, #0]
 264 00c0 23F07063 		bic	r3, r3, #251658240
 265 00c4 1A43     		orrs	r2, r2, r3
 266 00c6 BB68     		ldr	r3, [r7, #8]
 267 00c8 1A60     		str	r2, [r3, #0]
 327:../Dave/Generated/src/CAN001/CAN001.c ****                             CAN_MO_MOFCR_DLC_Pos, (uint32_t)MsgObjptr->DataLength);
 328:../Dave/Generated/src/CAN001/CAN001.c ****       /* Configure Data registers*/
 329:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 268              		.loc 1 329 0
 269 00ca 4FF00003 		mov	r3, #0
 270 00ce FB60     		str	r3, [r7, #12]
 271 00d0 59E0     		b	.L10
 272              	.L13:
 330:../Dave/Generated/src/CAN001/CAN001.c ****       {
 331:../Dave/Generated/src/CAN001/CAN001.c ****         if(Count < 4U)
 273              		.loc 1 331 0
 274 00d2 FB68     		ldr	r3, [r7, #12]
 275 00d4 032B     		cmp	r3, #3
 276 00d6 23D8     		bhi	.L11
 332:../Dave/Generated/src/CAN001/CAN001.c ****         {
 333:../Dave/Generated/src/CAN001/CAN001.c ****           WR_REG(CAN_MOxRegs->MODATAL, (uint32_t)((uint32_t)CAN_MO_MODATAL_DB0_Msk << (Count*8U)), 
 277              		.loc 1 333 0
 278 00d8 7A68     		ldr	r2, [r7, #4]
 279 00da FB68     		ldr	r3, [r7, #12]
 280 00dc D318     		adds	r3, r2, r3
 281 00de 03F10803 		add	r3, r3, #8
 282 00e2 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 283 00e4 1A46     		mov	r2, r3
 284 00e6 FB68     		ldr	r3, [r7, #12]
 285 00e8 4FEAC303 		lsl	r3, r3, #3
 286 00ec 02FA03F2 		lsl	r2, r2, r3
 287 00f0 FB68     		ldr	r3, [r7, #12]
 288 00f2 4FEAC303 		lsl	r3, r3, #3
 289 00f6 4FF0FF01 		mov	r1, #255
 290 00fa 01FA03F3 		lsl	r3, r1, r3
 291 00fe 1A40     		ands	r2, r2, r3
 292 0100 BB68     		ldr	r3, [r7, #8]
 293 0102 1969     		ldr	r1, [r3, #16]
 294 0104 FB68     		ldr	r3, [r7, #12]
 295 0106 4FEAC303 		lsl	r3, r3, #3
 296 010a 4FF0FF00 		mov	r0, #255
 297 010e 00FA03F3 		lsl	r3, r0, r3
 298 0112 6FEA0303 		mvn	r3, r3
 299 0116 0B40     		ands	r3, r3, r1
 300 0118 1A43     		orrs	r2, r2, r3
 301 011a BB68     		ldr	r3, [r7, #8]
 302 011c 1A61     		str	r2, [r3, #16]
 303 011e 2EE0     		b	.L12
 304              	.L11:
 334:../Dave/Generated/src/CAN001/CAN001.c ****                                         (Count*8U),(uint32_t)MsgObjptr->data[Count]);
 335:../Dave/Generated/src/CAN001/CAN001.c ****         }
 336:../Dave/Generated/src/CAN001/CAN001.c ****         else
 337:../Dave/Generated/src/CAN001/CAN001.c ****         {
 338:../Dave/Generated/src/CAN001/CAN001.c ****           WR_REG(CAN_MOxRegs->MODATAH, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)), \
 305              		.loc 1 338 0
 306 0120 7A68     		ldr	r2, [r7, #4]
 307 0122 FB68     		ldr	r3, [r7, #12]
 308 0124 D318     		adds	r3, r2, r3
 309 0126 03F10803 		add	r3, r3, #8
 310 012a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 311 012c 1A46     		mov	r2, r3
 312 012e FB68     		ldr	r3, [r7, #12]
 313 0130 03F10053 		add	r3, r3, #536870912
 314 0134 A3F10403 		sub	r3, r3, #4
 315 0138 4FEAC303 		lsl	r3, r3, #3
 316 013c 02FA03F2 		lsl	r2, r2, r3
 317 0140 FB68     		ldr	r3, [r7, #12]
 318 0142 03F10053 		add	r3, r3, #536870912
 319 0146 A3F10403 		sub	r3, r3, #4
 320 014a 4FEAC303 		lsl	r3, r3, #3
 321 014e 4FF0FF01 		mov	r1, #255
 322 0152 01FA03F3 		lsl	r3, r1, r3
 323 0156 1A40     		ands	r2, r2, r3
 324 0158 BB68     		ldr	r3, [r7, #8]
 325 015a 5969     		ldr	r1, [r3, #20]
 326 015c FB68     		ldr	r3, [r7, #12]
 327 015e 03F10053 		add	r3, r3, #536870912
 328 0162 A3F10403 		sub	r3, r3, #4
 329 0166 4FEAC303 		lsl	r3, r3, #3
 330 016a 4FF0FF00 		mov	r0, #255
 331 016e 00FA03F3 		lsl	r3, r0, r3
 332 0172 6FEA0303 		mvn	r3, r3
 333 0176 0B40     		ands	r3, r3, r1
 334 0178 1A43     		orrs	r2, r2, r3
 335 017a BB68     		ldr	r3, [r7, #8]
 336 017c 5A61     		str	r2, [r3, #20]
 337              	.L12:
 329:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 338              		.loc 1 329 0
 339 017e FB68     		ldr	r3, [r7, #12]
 340 0180 03F10103 		add	r3, r3, #1
 341 0184 FB60     		str	r3, [r7, #12]
 342              	.L10:
 329:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < MsgObjptr->DataLength; Count++) 
 343              		.loc 1 329 0 is_stmt 0 discriminator 1
 344 0186 7B68     		ldr	r3, [r7, #4]
 345 0188 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 346 018a 1A46     		mov	r2, r3
 347 018c FB68     		ldr	r3, [r7, #12]
 348 018e 9A42     		cmp	r2, r3
 349 0190 9FD8     		bhi	.L13
 339:../Dave/Generated/src/CAN001/CAN001.c ****                                     ((Count-4U)*8U), (uint32_t)MsgObjptr->data[Count]);
 340:../Dave/Generated/src/CAN001/CAN001.c ****         } /* if(Count < 4) */
 341:../Dave/Generated/src/CAN001/CAN001.c ****       }  /* for(Count = 0; Count < MsgObjptr->DataLength; Count++) */
 342:../Dave/Generated/src/CAN001/CAN001.c ****       /* Set MO as Transmit message object and set NEWDAT bit */
 343:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETDIR_Msk | \
 350              		.loc 1 343 0 is_stmt 1
 351 0192 BA68     		ldr	r2, [r7, #8]
 352 0194 4FF00003 		mov	r3, #0
 353 0198 C0F60803 		movt	r3, 2056
 354 019c D361     		str	r3, [r2, #28]
 355 019e 03E0     		b	.L14
 356              	.L9:
 344:../Dave/Generated/src/CAN001/CAN001.c ****                                                    CAN_MO_MOCTR_SETNEWDAT_Msk);
 345:../Dave/Generated/src/CAN001/CAN001.c ****     }/*if (MsgType == TRANSMSGOBJ)*/
 346:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_3_3>>>*/
 347:../Dave/Generated/src/CAN001/CAN001.c ****     else
 348:../Dave/Generated/src/CAN001/CAN001.c ****     { 
 349:../Dave/Generated/src/CAN001/CAN001.c ****       /* Set MO as Receive message object and set RXEN bit */
 350:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 357              		.loc 1 350 0
 358 01a0 BB68     		ldr	r3, [r7, #8]
 359 01a2 4FF40062 		mov	r2, #2048
 360 01a6 DA61     		str	r2, [r3, #28]
 361              	.L14:
 351:../Dave/Generated/src/CAN001/CAN001.c ****     } /*if(MsgType == RECMSGOBJ)*/
 352:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 353:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | \
 362              		.loc 1 353 0
 363 01a8 BB68     		ldr	r3, [r7, #8]
 364 01aa 4FF0D462 		mov	r2, #111149056
 365 01ae DA61     		str	r2, [r3, #28]
 354:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETTXEN1_Msk | \
 355:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 356:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETMSGVAL_Msk );
 357:../Dave/Generated/src/CAN001/CAN001.c **** }
 366              		.loc 1 357 0
 367 01b0 07F11407 		add	r7, r7, #20
 368 01b4 BD46     		mov	sp, r7
 369 01b6 80BC     		pop	{r7}
 370 01b8 7047     		bx	lr
 371              		.cfi_endproc
 372              	.LFE114:
 374 01ba 00BF     		.section	.text.CAN001_lNodeInit,"ax",%progbits
 375              		.align	2
 376              		.thumb
 377              		.thumb_func
 379              	CAN001_lNodeInit:
 380              	.LFB115:
 358:../Dave/Generated/src/CAN001/CAN001.c **** 
 359:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will initialize node with the given handle */                 
 360:../Dave/Generated/src/CAN001/CAN001.c **** static void CAN001_lNodeInit(const CAN001_HandleType* Handle)
 361:../Dave/Generated/src/CAN001/CAN001.c ****  {
 381              		.loc 1 361 0
 382              		.cfi_startproc
 383              		@ args = 0, pretend = 0, frame = 24
 384              		@ frame_needed = 1, uses_anonymous_args = 0
 385 0000 80B5     		push	{r7, lr}
 386              	.LCFI9:
 387              		.cfi_def_cfa_offset 8
 388              		.cfi_offset 7, -8
 389              		.cfi_offset 14, -4
 390 0002 86B0     		sub	sp, sp, #24
 391              	.LCFI10:
 392              		.cfi_def_cfa_offset 32
 393 0004 00AF     		add	r7, sp, #0
 394              	.LCFI11:
 395              		.cfi_def_cfa_register 7
 396 0006 7860     		str	r0, [r7, #4]
 362:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count  = 0U;
 397              		.loc 1 362 0
 398 0008 4FF00003 		mov	r3, #0
 399 000c 7B61     		str	r3, [r7, #20]
 363:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo;
 364:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = CAN_MO0;
 400              		.loc 1 364 0
 401 000e 4FF4A043 		mov	r3, #20480
 402 0012 C4F60103 		movt	r3, 18433
 403 0016 3B61     		str	r3, [r7, #16]
 365:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_nonAPI_4>>> */
 366:../Dave/Generated/src/CAN001/CAN001.c ****   /* Map to node register offset as per node ID */
 367:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 404              		.loc 1 367 0
 405 0018 7B68     		ldr	r3, [r7, #4]
 406 001a 9B68     		ldr	r3, [r3, #8]
 407 001c FB60     		str	r3, [r7, #12]
 368:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 369:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_1>>>*/
 370:../Dave/Generated/src/CAN001/CAN001.c ****  
 371:../Dave/Generated/src/CAN001/CAN001.c ****   /* wait until panel has finished initialization */
 372:../Dave/Generated/src/CAN001/CAN001.c ****   while ( (CAN->PANCTR & CAN_PANCTR_BUSY_Msk))
 408              		.loc 1 372 0
 409 001e 00BF     		nop
 410              	.L16:
 411              		.loc 1 372 0 is_stmt 0 discriminator 1
 412 0020 4FF48043 		mov	r3, #16384
 413 0024 C4F60103 		movt	r3, 18433
 414 0028 D3F8C431 		ldr	r3, [r3, #452]
 415 002c 03F48073 		and	r3, r3, #256
 416 0030 002B     		cmp	r3, #0
 417 0032 F5D1     		bne	.L16
 373:../Dave/Generated/src/CAN001/CAN001.c **** 	{}
 374:../Dave/Generated/src/CAN001/CAN001.c ****   /* set CCE and INIT bit NCR for node configuration */
 375:../Dave/Generated/src/CAN001/CAN001.c ****    /* Enable Alert and last error code interrupt */
 376:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NCR |= ((uint32_t)CAN_NODE_NCR_INIT_Msk | (uint32_t)CAN_NODE_NCR_CCE_Msk);
 418              		.loc 1 376 0 is_stmt 1
 419 0034 FB68     		ldr	r3, [r7, #12]
 420 0036 1B68     		ldr	r3, [r3, #0]
 421 0038 43F04102 		orr	r2, r3, #65
 422 003c FB68     		ldr	r3, [r7, #12]
 423 003e 1A60     		str	r2, [r3, #0]
 377:../Dave/Generated/src/CAN001/CAN001.c ****   /* Configure bit timing register */
 378:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = ((uint32_t)Handle->BaudRate.DIV8 << \
 424              		.loc 1 378 0
 425 0040 7B68     		ldr	r3, [r7, #4]
 426 0042 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 427 0044 4FEAC332 		lsl	r2, r3, #15
 379:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_DIV8_Pos) | \
 380:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.TimeSEG2 << \
 428              		.loc 1 380 0
 429 0048 7B68     		ldr	r3, [r7, #4]
 430 004a DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 431 004c 4FEA0333 		lsl	r3, r3, #12
 379:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_DIV8_Pos) | \
 432              		.loc 1 379 0
 433 0050 1A43     		orrs	r2, r2, r3
 381:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG2_Pos) | \
 382:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.TimeSEG1 << \
 434              		.loc 1 382 0
 435 0052 7B68     		ldr	r3, [r7, #4]
 436 0054 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 437 0056 4FEA0323 		lsl	r3, r3, #8
 381:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG2_Pos) | \
 438              		.loc 1 381 0
 439 005a 1A43     		orrs	r2, r2, r3
 383:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG1_Pos) | \
 384:../Dave/Generated/src/CAN001/CAN001.c ****                          ((uint32_t)Handle->BaudRate.SyncJumpWidth << \
 440              		.loc 1 384 0
 441 005c 7B68     		ldr	r3, [r7, #4]
 442 005e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 443 0060 4FEA8313 		lsl	r3, r3, #6
 383:../Dave/Generated/src/CAN001/CAN001.c ****                                           CAN_NODE_NBTR_TSEG1_Pos) | \
 444              		.loc 1 383 0
 445 0064 1A43     		orrs	r2, r2, r3
 385:../Dave/Generated/src/CAN001/CAN001.c ****                                             CAN_NODE_NBTR_SJW_Pos) | \
 386:../Dave/Generated/src/CAN001/CAN001.c ****                          (uint32_t)Handle->BaudRate.BaudRatePresc;
 446              		.loc 1 386 0
 447 0066 7B68     		ldr	r3, [r7, #4]
 448 0068 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 385:../Dave/Generated/src/CAN001/CAN001.c ****                                             CAN_NODE_NBTR_SJW_Pos) | \
 449              		.loc 1 385 0
 450 006a 1A43     		orrs	r2, r2, r3
 378:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = ((uint32_t)Handle->BaudRate.DIV8 << \
 451              		.loc 1 378 0
 452 006c FB68     		ldr	r3, [r7, #12]
 453 006e 1A61     		str	r2, [r3, #16]
 387:../Dave/Generated/src/CAN001/CAN001.c ****   /* Check whether loop back mode is to be enabled */
 388:../Dave/Generated/src/CAN001/CAN001.c ****   if ( Handle->LoopBackModeEn == CAN001_ENABLE)
 454              		.loc 1 388 0
 455 0070 7B68     		ldr	r3, [r7, #4]
 456 0072 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 457 0074 012B     		cmp	r3, #1
 458 0076 05D1     		bne	.L17
 389:../Dave/Generated/src/CAN001/CAN001.c ****   {
 390:../Dave/Generated/src/CAN001/CAN001.c ****     SET_BIT(CAN_NodexRegs->NPCR, CAN_NODE_NPCR_LBM_Pos);
 459              		.loc 1 390 0
 460 0078 FB68     		ldr	r3, [r7, #12]
 461 007a DB68     		ldr	r3, [r3, #12]
 462 007c 43F48072 		orr	r2, r3, #256
 463 0080 FB68     		ldr	r3, [r7, #12]
 464 0082 DA60     		str	r2, [r3, #12]
 465              	.L17:
 391:../Dave/Generated/src/CAN001/CAN001.c ****   }
 392:../Dave/Generated/src/CAN001/CAN001.c ****   /* Allocate required number of message object to node list 
 393:../Dave/Generated/src/CAN001/CAN001.c ****     * and configure message object */
 394:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 466              		.loc 1 394 0
 467 0084 4FF00003 		mov	r3, #0
 468 0088 7B61     		str	r3, [r7, #20]
 469 008a 27E0     		b	.L18
 470              	.L19:
 395:../Dave/Generated/src/CAN001/CAN001.c ****   {
 396:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lAllocateMOtoNodeList(Handle->NodeID, (uint8_t)(Handle->FirstMOMapping + Count));
 471              		.loc 1 396 0 discriminator 2
 472 008c 7B68     		ldr	r3, [r7, #4]
 473 008e 1A7B     		ldrb	r2, [r3, #12]	@ zero_extendqisi2
 474 0090 7B68     		ldr	r3, [r7, #4]
 475 0092 997B     		ldrb	r1, [r3, #14]	@ zero_extendqisi2
 476 0094 7B69     		ldr	r3, [r7, #20]
 477 0096 DBB2     		uxtb	r3, r3
 478 0098 CB18     		adds	r3, r1, r3
 479 009a DBB2     		uxtb	r3, r3
 480 009c 1046     		mov	r0, r2
 481 009e 1946     		mov	r1, r3
 482 00a0 FFF7FEFF 		bl	CAN001_lAllocateMOtoNodeList
 397:../Dave/Generated/src/CAN001/CAN001.c ****     MsgNo = (uint8_t)(Handle->FirstMOMapping + Count);
 483              		.loc 1 397 0 discriminator 2
 484 00a4 7B68     		ldr	r3, [r7, #4]
 485 00a6 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 486 00a8 7B69     		ldr	r3, [r7, #20]
 487 00aa DBB2     		uxtb	r3, r3
 488 00ac D318     		adds	r3, r2, r3
 489 00ae FB72     		strb	r3, [r7, #11]
 398:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs = GET_MO_OFFSET(MsgNo);
 490              		.loc 1 398 0 discriminator 2
 491 00b0 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 492 00b2 03F11073 		add	r3, r3, #37748736
 493 00b6 03F52863 		add	r3, r3, #2688
 494 00ba 4FEA4313 		lsl	r3, r3, #5
 495 00be 3B61     		str	r3, [r7, #16]
 399:../Dave/Generated/src/CAN001/CAN001.c **** 	 /* Configure MPN */
 400:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR = (((uint32_t)Handle->NodeID << \
 496              		.loc 1 400 0 discriminator 2
 497 00c0 7B68     		ldr	r3, [r7, #4]
 498 00c2 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 499 00c4 4FEA4332 		lsl	r2, r3, #13
 401:../Dave/Generated/src/CAN001/CAN001.c ****                           (CAN_MO_MOIPR_MPN_Pos + 5)) | \
 402:../Dave/Generated/src/CAN001/CAN001.c ****                           (Count << CAN_MO_MOIPR_MPN_Pos));
 500              		.loc 1 402 0 discriminator 2
 501 00c8 7B69     		ldr	r3, [r7, #20]
 502 00ca 4FEA0323 		lsl	r3, r3, #8
 401:../Dave/Generated/src/CAN001/CAN001.c ****                           (CAN_MO_MOIPR_MPN_Pos + 5)) | \
 503              		.loc 1 401 0 discriminator 2
 504 00ce 1A43     		orrs	r2, r2, r3
 400:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR = (((uint32_t)Handle->NodeID << \
 505              		.loc 1 400 0 discriminator 2
 506 00d0 3B69     		ldr	r3, [r7, #16]
 507 00d2 9A60     		str	r2, [r3, #8]
 394:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 508              		.loc 1 394 0 discriminator 2
 509 00d4 7B69     		ldr	r3, [r7, #20]
 510 00d6 03F10103 		add	r3, r3, #1
 511 00da 7B61     		str	r3, [r7, #20]
 512              	.L18:
 394:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = 0U; Count < Handle->NodeMONo; Count++)
 513              		.loc 1 394 0 is_stmt 0 discriminator 1
 514 00dc 7B68     		ldr	r3, [r7, #4]
 515 00de DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 516 00e0 1A46     		mov	r2, r3
 517 00e2 7B69     		ldr	r3, [r7, #20]
 518 00e4 9A42     		cmp	r2, r3
 519 00e6 D1D8     		bhi	.L19
 403:../Dave/Generated/src/CAN001/CAN001.c ****   }
 404:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 405:../Dave/Generated/src/CAN001/CAN001.c **** }
 520              		.loc 1 405 0 is_stmt 1
 521 00e8 07F11807 		add	r7, r7, #24
 522 00ec BD46     		mov	sp, r7
 523 00ee 80BD     		pop	{r7, pc}
 524              		.cfi_endproc
 525              	.LFE115:
 527              		.section	.text.CAN001_Init,"ax",%progbits
 528              		.align	2
 529              		.global	CAN001_Init
 530              		.thumb
 531              		.thumb_func
 533              	CAN001_Init:
 534              	.LFB116:
 406:../Dave/Generated/src/CAN001/CAN001.c ****  
 407:../Dave/Generated/src/CAN001/CAN001.c **** /*******************************************************************************
 408:../Dave/Generated/src/CAN001/CAN001.c **** **                      Public Function Definitions                           **
 409:../Dave/Generated/src/CAN001/CAN001.c **** *******************************************************************************/
 410:../Dave/Generated/src/CAN001/CAN001.c **** 
 411:../Dave/Generated/src/CAN001/CAN001.c **** 
 412:../Dave/Generated/src/CAN001/CAN001.c **** /** @ingroup CAN001_publicfunc
 413:../Dave/Generated/src/CAN001/CAN001.c ****  * @{
 414:../Dave/Generated/src/CAN001/CAN001.c ****  */
 415:../Dave/Generated/src/CAN001/CAN001.c **** 
 416:../Dave/Generated/src/CAN001/CAN001.c **** 
 417:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will initialize node with the given handle */                 
 418:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_Init(void)
 419:../Dave/Generated/src/CAN001/CAN001.c **** {
 535              		.loc 1 419 0
 536              		.cfi_startproc
 537              		@ args = 0, pretend = 0, frame = 0
 538              		@ frame_needed = 1, uses_anonymous_args = 0
 539 0000 80B5     		push	{r7, lr}
 540              	.LCFI12:
 541              		.cfi_def_cfa_offset 8
 542              		.cfi_offset 7, -8
 543              		.cfi_offset 14, -4
 544 0002 00AF     		add	r7, sp, #0
 545              	.LCFI13:
 546              		.cfi_def_cfa_register 7
 420:../Dave/Generated/src/CAN001/CAN001.c ****    DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 421:../Dave/Generated/src/CAN001/CAN001.c ****    /* Calling CANGLOBAL App Initialization */
 422:../Dave/Generated/src/CAN001/CAN001.c ****    CANGLOBAL_Init();
 547              		.loc 1 422 0
 548 0004 FFF7FEFF 		bl	CANGLOBAL_Init
 423:../Dave/Generated/src/CAN001/CAN001.c **** 
 424:../Dave/Generated/src/CAN001/CAN001.c ****    /* Node2 initialization */
 425:../Dave/Generated/src/CAN001/CAN001.c ****    CAN001_lNodeInit(&CAN001_Handle0);
 549              		.loc 1 425 0
 550 0008 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 551 000c C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 552 0010 FFF7FEFF 		bl	CAN001_lNodeInit
 426:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO1 Initialization */
 427:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_1,1U);
 553              		.loc 1 427 0
 554 0014 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 555 0018 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 556 001c 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_1
 557 0020 C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_1
 558 0024 4FF00102 		mov	r2, #1
 559 0028 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 428:../Dave/Generated/src/CAN001/CAN001.c ****    /* Enable receive interrupt */
 429:../Dave/Generated/src/CAN001/CAN001.c ****    EnableMOInterrupt(CAN001_Handle0,(uint32_t)CAN_MO_RECEIVE_INTERRUPT,1);
 560              		.loc 1 429 0
 561 002c 40F20003 		movw	r3, #:lower16:CAN001_Handle0
 562 0030 C0F20003 		movt	r3, #:upper16:CAN001_Handle0
 563 0034 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 564 0036 4FEA4313 		lsl	r3, r3, #5
 565 003a 03F19043 		add	r3, r3, #1207959552
 566 003e 03F5A833 		add	r3, r3, #86016
 567 0042 1A46     		mov	r2, r3
 568 0044 40F20003 		movw	r3, #:lower16:CAN001_Handle0
 569 0048 C0F20003 		movt	r3, #:upper16:CAN001_Handle0
 570 004c 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 571 004e 4FEA4313 		lsl	r3, r3, #5
 572 0052 03F19043 		add	r3, r3, #1207959552
 573 0056 03F5A833 		add	r3, r3, #86016
 574 005a 1B68     		ldr	r3, [r3, #0]
 575 005c 43F48033 		orr	r3, r3, #65536
 576 0060 1360     		str	r3, [r2, #0]
 430:../Dave/Generated/src/CAN001/CAN001.c ****    /* LMO2 Initialization */
 431:../Dave/Generated/src/CAN001/CAN001.c ****    (void)CAN001_ConfigMsgObj(&CAN001_Handle0,&CAN001_MessageHandle0_2,2U);
 577              		.loc 1 431 0
 578 0062 40F20000 		movw	r0, #:lower16:CAN001_Handle0
 579 0066 C0F20000 		movt	r0, #:upper16:CAN001_Handle0
 580 006a 40F20001 		movw	r1, #:lower16:CAN001_MessageHandle0_2
 581 006e C0F20001 		movt	r1, #:upper16:CAN001_MessageHandle0_2
 582 0072 4FF00202 		mov	r2, #2
 583 0076 FFF7FEFF 		bl	CAN001_ConfigMsgObj
 432:../Dave/Generated/src/CAN001/CAN001.c ****    DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 433:../Dave/Generated/src/CAN001/CAN001.c **** }
 584              		.loc 1 433 0
 585 007a 80BD     		pop	{r7, pc}
 586              		.cfi_endproc
 587              	.LFE116:
 589              		.section	.text.CAN001_NodeDeInit,"ax",%progbits
 590              		.align	2
 591              		.global	CAN001_NodeDeInit
 592              		.thumb
 593              		.thumb_func
 595              	CAN001_NodeDeInit:
 596              	.LFB117:
 434:../Dave/Generated/src/CAN001/CAN001.c ****   
 435:../Dave/Generated/src/CAN001/CAN001.c ****        
 436:../Dave/Generated/src/CAN001/CAN001.c ****   
 437:../Dave/Generated/src/CAN001/CAN001.c **** /* This function will deinitialize node with the given handle */
 438:../Dave/Generated/src/CAN001/CAN001.c **** /*<<<DD_CAN001_API_2>>>*/ 
 439:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_NodeDeInit(const CAN001_HandleType* Handle)
 440:../Dave/Generated/src/CAN001/CAN001.c **** {
 597              		.loc 1 440 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 32
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 80B5     		push	{r7, lr}
 602              	.LCFI14:
 603              		.cfi_def_cfa_offset 8
 604              		.cfi_offset 7, -8
 605              		.cfi_offset 14, -4
 606 0002 88B0     		sub	sp, sp, #32
 607              	.LCFI15:
 608              		.cfi_def_cfa_offset 40
 609 0004 00AF     		add	r7, sp, #0
 610              	.LCFI16:
 611              		.cfi_def_cfa_register 7
 612 0006 7860     		str	r0, [r7, #4]
 441:../Dave/Generated/src/CAN001/CAN001.c ****   int32_t Count = 0;
 613              		.loc 1 441 0
 614 0008 4FF00003 		mov	r3, #0
 615 000c FB61     		str	r3, [r7, #28]
 442:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo;
 443:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t*	MsgPndRegOffset = 0;
 616              		.loc 1 443 0
 617 000e 4FF00003 		mov	r3, #0
 618 0012 BB61     		str	r3, [r7, #24]
 444:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = CAN_MO0;
 619              		.loc 1 444 0
 620 0014 4FF4A043 		mov	r3, #20480
 621 0018 C4F60103 		movt	r3, 18433
 622 001c 7B61     		str	r3, [r7, #20]
 445:../Dave/Generated/src/CAN001/CAN001.c ****   /* Map to node register offser as per node ID */
 446:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 623              		.loc 1 446 0
 624 001e 7B68     		ldr	r3, [r7, #4]
 625 0020 9B68     		ldr	r3, [r3, #8]
 626 0022 3B61     		str	r3, [r7, #16]
 447:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 448:../Dave/Generated/src/CAN001/CAN001.c ****   /* Reset all message object registers and deallocate to free list */
 449:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 627              		.loc 1 449 0
 628 0024 7B68     		ldr	r3, [r7, #4]
 629 0026 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 630 0028 03F1FF33 		add	r3, r3, #-1
 631 002c FB61     		str	r3, [r7, #28]
 632 002e 36E0     		b	.L22
 633              	.L23:
 450:../Dave/Generated/src/CAN001/CAN001.c ****   {
 451:../Dave/Generated/src/CAN001/CAN001.c **** 	MsgNo = (uint8_t)(Handle->FirstMOMapping+(uint32_t)Count);
 634              		.loc 1 451 0 discriminator 2
 635 0030 7B68     		ldr	r3, [r7, #4]
 636 0032 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 637 0034 FB69     		ldr	r3, [r7, #28]
 638 0036 DBB2     		uxtb	r3, r3
 639 0038 D318     		adds	r3, r2, r3
 640 003a FB73     		strb	r3, [r7, #15]
 452:../Dave/Generated/src/CAN001/CAN001.c ****     /* Mapping to message object offset value*/
 453:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs = GET_MO_OFFSET(MsgNo);
 641              		.loc 1 453 0 discriminator 2
 642 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 643 003e 03F11073 		add	r3, r3, #37748736
 644 0042 03F52863 		add	r3, r3, #2688
 645 0046 4FEA4313 		lsl	r3, r3, #5
 646 004a 7B61     		str	r3, [r7, #20]
 454:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset all message objects registers */
 455:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOFCR =  (0x00000000U);			 		
 647              		.loc 1 455 0 discriminator 2
 648 004c 7B69     		ldr	r3, [r7, #20]
 649 004e 4FF00002 		mov	r2, #0
 650 0052 1A60     		str	r2, [r3, #0]
 456:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOIPR &= (0x000000FFU);			 
 651              		.loc 1 456 0 discriminator 2
 652 0054 7B69     		ldr	r3, [r7, #20]
 653 0056 9B68     		ldr	r3, [r3, #8]
 654 0058 DAB2     		uxtb	r2, r3
 655 005a 7B69     		ldr	r3, [r7, #20]
 656 005c 9A60     		str	r2, [r3, #8]
 457:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOAMR = (0x3FFFFFFFU);			 
 657              		.loc 1 457 0 discriminator 2
 658 005e 7B69     		ldr	r3, [r7, #20]
 659 0060 6FF04042 		mvn	r2, #-1073741824
 660 0064 DA60     		str	r2, [r3, #12]
 458:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MODATAL = (0x00000000U);	
 661              		.loc 1 458 0 discriminator 2
 662 0066 7B69     		ldr	r3, [r7, #20]
 663 0068 4FF00002 		mov	r2, #0
 664 006c 1A61     		str	r2, [r3, #16]
 459:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MODATAH = (0x00000000U);	
 665              		.loc 1 459 0 discriminator 2
 666 006e 7B69     		ldr	r3, [r7, #20]
 667 0070 4FF00002 		mov	r2, #0
 668 0074 5A61     		str	r2, [r3, #20]
 460:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOAR = (0x00000000U);   
 669              		.loc 1 460 0 discriminator 2
 670 0076 7B69     		ldr	r3, [r7, #20]
 671 0078 4FF00002 		mov	r2, #0
 672 007c 9A61     		str	r2, [r3, #24]
 461:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = (0x00000FFFU);
 673              		.loc 1 461 0 discriminator 2
 674 007e 7B69     		ldr	r3, [r7, #20]
 675 0080 40F6FF72 		movw	r2, #4095
 676 0084 DA61     		str	r2, [r3, #28]
 462:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lDeallocateMsgObj(Handle->FirstMOMapping+(uint32_t)Count);
 677              		.loc 1 462 0 discriminator 2
 678 0086 7B68     		ldr	r3, [r7, #4]
 679 0088 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 680 008a 1A46     		mov	r2, r3
 681 008c FB69     		ldr	r3, [r7, #28]
 682 008e D318     		adds	r3, r2, r3
 683 0090 1846     		mov	r0, r3
 684 0092 FFF7FEFF 		bl	CAN001_lDeallocateMsgObj
 449:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 685              		.loc 1 449 0 discriminator 2
 686 0096 FB69     		ldr	r3, [r7, #28]
 687 0098 03F1FF33 		add	r3, r3, #-1
 688 009c FB61     		str	r3, [r7, #28]
 689              	.L22:
 449:../Dave/Generated/src/CAN001/CAN001.c ****   for(Count = (int32_t)(Handle->NodeMONo)-1; Count >= 0; Count--)
 690              		.loc 1 449 0 is_stmt 0 discriminator 1
 691 009e FB69     		ldr	r3, [r7, #28]
 692 00a0 002B     		cmp	r3, #0
 693 00a2 C5DA     		bge	.L23
 463:../Dave/Generated/src/CAN001/CAN001.c ****   }
 464:../Dave/Generated/src/CAN001/CAN001.c ****   /* set CCE and INIT bit NCR for disconnecting the node */
 465:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NCR = (0x00000041U);
 694              		.loc 1 465 0 is_stmt 1
 695 00a4 3B69     		ldr	r3, [r7, #16]
 696 00a6 4FF04102 		mov	r2, #65
 697 00aa 1A60     		str	r2, [r3, #0]
 466:../Dave/Generated/src/CAN001/CAN001.c ****   /* reset all node registers */
 467:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NSR = (0x00000000U);
 698              		.loc 1 467 0
 699 00ac 3B69     		ldr	r3, [r7, #16]
 700 00ae 4FF00002 		mov	r2, #0
 701 00b2 5A60     		str	r2, [r3, #4]
 468:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NPCR &= (0x0000000FU);
 702              		.loc 1 468 0
 703 00b4 3B69     		ldr	r3, [r7, #16]
 704 00b6 DB68     		ldr	r3, [r3, #12]
 705 00b8 03F00F02 		and	r2, r3, #15
 706 00bc 3B69     		ldr	r3, [r7, #16]
 707 00be DA60     		str	r2, [r3, #12]
 469:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NECNT = (0x00600000U);
 708              		.loc 1 469 0
 709 00c0 3B69     		ldr	r3, [r7, #16]
 710 00c2 4FF4C002 		mov	r2, #6291456
 711 00c6 5A61     		str	r2, [r3, #20]
 470:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NFCR = (0x00000000U);
 712              		.loc 1 470 0
 713 00c8 3B69     		ldr	r3, [r7, #16]
 714 00ca 4FF00002 		mov	r2, #0
 715 00ce 9A61     		str	r2, [r3, #24]
 471:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NBTR = (0x00000000U);
 716              		.loc 1 471 0
 717 00d0 3B69     		ldr	r3, [r7, #16]
 718 00d2 4FF00002 		mov	r2, #0
 719 00d6 1A61     		str	r2, [r3, #16]
 472:../Dave/Generated/src/CAN001/CAN001.c ****   MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 720              		.loc 1 472 0
 721 00d8 7B68     		ldr	r3, [r7, #4]
 722 00da 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 723 00dc 1A46     		mov	r2, r3
 724 00de 45F25003 		movw	r3, #20560
 725 00e2 C1F20023 		movt	r3, 4608
 726 00e6 D318     		adds	r3, r2, r3
 727 00e8 4FEA8303 		lsl	r3, r3, #2
 728 00ec BB61     		str	r3, [r7, #24]
 473:../Dave/Generated/src/CAN001/CAN001.c ****   (*MsgPndRegOffset) = (0x00000000U);
 729              		.loc 1 473 0
 730 00ee BB69     		ldr	r3, [r7, #24]
 731 00f0 4FF00002 		mov	r2, #0
 732 00f4 1A60     		str	r2, [r3, #0]
 474:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT); 
 475:../Dave/Generated/src/CAN001/CAN001.c **** }    
 733              		.loc 1 475 0
 734 00f6 07F12007 		add	r7, r7, #32
 735 00fa BD46     		mov	sp, r7
 736 00fc 80BD     		pop	{r7, pc}
 737              		.cfi_endproc
 738              	.LFE117:
 740 00fe 00BF     		.section	.text.CAN001_ConfigMsgObj,"ax",%progbits
 741              		.align	2
 742              		.global	CAN001_ConfigMsgObj
 743              		.thumb
 744              		.thumb_func
 746              	CAN001_ConfigMsgObj:
 747              	.LFB118:
 476:../Dave/Generated/src/CAN001/CAN001.c ****  /* 		
 477:../Dave/Generated/src/CAN001/CAN001.c ****  *  			 This function is will configure message object as per the message handle
 478:../Dave/Generated/src/CAN001/CAN001.c ****  *  passed to the function. Function will either Enable or Disable as per
 479:../Dave/Generated/src/CAN001/CAN001.c ****  *  input parameter
 480:../Dave/Generated/src/CAN001/CAN001.c ****  */
 481:../Dave/Generated/src/CAN001/CAN001.c **** 
 482:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ConfigMsgObj
 483:../Dave/Generated/src/CAN001/CAN001.c **** (
 484:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 485:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_MessageHandleType* SwMsgObjptr,
 486:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 487:../Dave/Generated/src/CAN001/CAN001.c ****  )
 488:../Dave/Generated/src/CAN001/CAN001.c **** {
 748              		.loc 1 488 0
 749              		.cfi_startproc
 750              		@ args = 0, pretend = 0, frame = 32
 751              		@ frame_needed = 1, uses_anonymous_args = 0
 752 0000 80B5     		push	{r7, lr}
 753              	.LCFI17:
 754              		.cfi_def_cfa_offset 8
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 88B0     		sub	sp, sp, #32
 758              	.LCFI18:
 759              		.cfi_def_cfa_offset 40
 760 0004 00AF     		add	r7, sp, #0
 761              	.LCFI19:
 762              		.cfi_def_cfa_register 7
 763 0006 F860     		str	r0, [r7, #12]
 764 0008 B960     		str	r1, [r7, #8]
 765 000a 1346     		mov	r3, r2
 766 000c FB71     		strb	r3, [r7, #7]
 489:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_MO_NOT_FOUND;
 767              		.loc 1 489 0
 768 000e 4FF00203 		mov	r3, #2
 769 0012 FB61     		str	r3, [r7, #28]
 490:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 770              		.loc 1 490 0
 771 0014 FB68     		ldr	r3, [r7, #12]
 772 0016 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 773 0018 FB79     		ldrb	r3, [r7, #7]
 774 001a D318     		adds	r3, r2, r3
 775 001c DBB2     		uxtb	r3, r3
 776 001e 03F1FF33 		add	r3, r3, #-1
 777 0022 FB76     		strb	r3, [r7, #27]
 491:../Dave/Generated/src/CAN001/CAN001.c **** 	/* Mapping to message object offset value*/
 492:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 493:../Dave/Generated/src/CAN001/CAN001.c ****                       GET_MO_OFFSET(MsgNo);
 778              		.loc 1 493 0
 779 0024 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 780 0026 03F11073 		add	r3, r3, #37748736
 781 002a 03F52863 		add	r3, r3, #2688
 782 002e 4FEA4313 		lsl	r3, r3, #5
 492:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 783              		.loc 1 492 0
 784 0032 7B61     		str	r3, [r7, #20]
 494:../Dave/Generated/src/CAN001/CAN001.c ****   /* <<<DD_CAN001_API_3>>> */
 495:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 496:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 497:../Dave/Generated/src/CAN001/CAN001.c ****     
 498:../Dave/Generated/src/CAN001/CAN001.c ****   if (((SwMsgObjptr->IDExten != (uint8_t)STANDARDTYPE) && \
 785              		.loc 1 498 0
 786 0034 BB68     		ldr	r3, [r7, #8]
 787 0036 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 788 0038 002B     		cmp	r3, #0
 789 003a 03D0     		beq	.L25
 499:../Dave/Generated/src/CAN001/CAN001.c ****                                         (SwMsgObjptr->IDExten != (uint8_t)EXTENDEDTYPE))
 790              		.loc 1 499 0 discriminator 1
 791 003c BB68     		ldr	r3, [r7, #8]
 792 003e 1B7A     		ldrb	r3, [r3, #8]	@ zero_extendqisi2
 498:../Dave/Generated/src/CAN001/CAN001.c ****   if (((SwMsgObjptr->IDExten != (uint8_t)STANDARDTYPE) && \
 793              		.loc 1 498 0 discriminator 1
 794 0040 012B     		cmp	r3, #1
 795 0042 0FD1     		bne	.L26
 796              	.L25:
 500:../Dave/Generated/src/CAN001/CAN001.c ****     ||((SwMsgObjptr->MsgObjEN != CAN001_ENABLE) && (SwMsgObjptr->MsgObjEN != CAN001_DISABLE))
 797              		.loc 1 500 0
 798 0044 BB68     		ldr	r3, [r7, #8]
 799 0046 DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 800 0048 012B     		cmp	r3, #1
 801 004a 03D0     		beq	.L27
 802              		.loc 1 500 0 is_stmt 0 discriminator 1
 803 004c BB68     		ldr	r3, [r7, #8]
 804 004e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 805 0050 002B     		cmp	r3, #0
 806 0052 07D1     		bne	.L26
 807              	.L27:
 501:../Dave/Generated/src/CAN001/CAN001.c ****     ||((SwMsgObjptr->MsgObjType != RECMSGOBJ) && (SwMsgObjptr->MsgObjType != TRANSMSGOBJ)))
 808              		.loc 1 501 0 is_stmt 1
 809 0054 BB68     		ldr	r3, [r7, #8]
 810 0056 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 811 0058 002B     		cmp	r3, #0
 812 005a 07D0     		beq	.L28
 813              		.loc 1 501 0 is_stmt 0 discriminator 1
 814 005c BB68     		ldr	r3, [r7, #8]
 815 005e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 816 0060 012B     		cmp	r3, #1
 817 0062 03D0     		beq	.L28
 818              	.L26:
 502:../Dave/Generated/src/CAN001/CAN001.c ****   {
 503:../Dave/Generated/src/CAN001/CAN001.c ****     Error =  (uint32_t)CAN001_INVALID_INPUT;
 819              		.loc 1 503 0 is_stmt 1
 820 0064 4FF00603 		mov	r3, #6
 821 0068 FB61     		str	r3, [r7, #28]
 822 006a 1AE0     		b	.L29
 823              	.L28:
 504:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 505:../Dave/Generated/src/CAN001/CAN001.c ****   }
 506:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is to be disabled */
 507:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_3_1>>>*/
 508:../Dave/Generated/src/CAN001/CAN001.c ****   else if (SwMsgObjptr->MsgObjEN == CAN001_DISABLE)
 824              		.loc 1 508 0
 825 006c BB68     		ldr	r3, [r7, #8]
 826 006e DB7C     		ldrb	r3, [r3, #19]	@ zero_extendqisi2
 827 0070 002B     		cmp	r3, #0
 828 0072 07D1     		bne	.L30
 509:../Dave/Generated/src/CAN001/CAN001.c ****   {
 510:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset MSGVAL bit */
 511:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 829              		.loc 1 511 0
 830 0074 7B69     		ldr	r3, [r7, #20]
 831 0076 4FF02002 		mov	r2, #32
 832 007a DA61     		str	r2, [r3, #28]
 512:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 833              		.loc 1 512 0
 834 007c 4FF00003 		mov	r3, #0
 835 0080 FB61     		str	r3, [r7, #28]
 836 0082 0EE0     		b	.L29
 837              	.L30:
 513:../Dave/Generated/src/CAN001/CAN001.c ****   } /* if (SwMsgObjptr->MsgObjEN == CAN001_DISABLE) */
 514:../Dave/Generated/src/CAN001/CAN001.c ****   else
 515:../Dave/Generated/src/CAN001/CAN001.c ****   {
 516:../Dave/Generated/src/CAN001/CAN001.c ****     CAN001_lConfigMORegs(SwMsgObjptr, (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U)));
 838              		.loc 1 516 0
 839 0084 FB68     		ldr	r3, [r7, #12]
 840 0086 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 841 0088 FB79     		ldrb	r3, [r7, #7]
 842 008a D318     		adds	r3, r2, r3
 843 008c DBB2     		uxtb	r3, r3
 844 008e 03F1FF33 		add	r3, r3, #-1
 845 0092 DBB2     		uxtb	r3, r3
 846 0094 B868     		ldr	r0, [r7, #8]
 847 0096 1946     		mov	r1, r3
 848 0098 FFF7FEFF 		bl	CAN001_lConfigMORegs
 517:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 849              		.loc 1 517 0
 850 009c 4FF00003 		mov	r3, #0
 851 00a0 FB61     		str	r3, [r7, #28]
 852              	.L29:
 518:../Dave/Generated/src/CAN001/CAN001.c ****   } /*if (SwMsgObjptr->MsgObjEN == CAN001_ENABLE)*/
 519:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 520:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 853              		.loc 1 520 0
 854 00a2 FB69     		ldr	r3, [r7, #28]
 521:../Dave/Generated/src/CAN001/CAN001.c **** }
 855              		.loc 1 521 0
 856 00a4 1846     		mov	r0, r3
 857 00a6 07F12007 		add	r7, r7, #32
 858 00aa BD46     		mov	sp, r7
 859 00ac 80BD     		pop	{r7, pc}
 860              		.cfi_endproc
 861              	.LFE118:
 863 00ae 00BF     		.section	.text.CAN001_SendDataFrame,"ax",%progbits
 864              		.align	2
 865              		.global	CAN001_SendDataFrame
 866              		.thumb
 867              		.thumb_func
 869              	CAN001_SendDataFrame:
 870              	.LFB119:
 522:../Dave/Generated/src/CAN001/CAN001.c **** 	
 523:../Dave/Generated/src/CAN001/CAN001.c **** 
 524:../Dave/Generated/src/CAN001/CAN001.c ****  /*
 525:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will put a transmit request to transmit message object 
 526:../Dave/Generated/src/CAN001/CAN001.c ****  *  for sending data frame
 527:../Dave/Generated/src/CAN001/CAN001.c ****  */
 528:../Dave/Generated/src/CAN001/CAN001.c **** 
 529:../Dave/Generated/src/CAN001/CAN001.c ****  
 530:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_SendDataFrame(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 531:../Dave/Generated/src/CAN001/CAN001.c **** {
 871              		.loc 1 531 0
 872              		.cfi_startproc
 873              		@ args = 0, pretend = 0, frame = 24
 874              		@ frame_needed = 1, uses_anonymous_args = 0
 875              		@ link register save eliminated.
 876 0000 80B4     		push	{r7}
 877              	.LCFI20:
 878              		.cfi_def_cfa_offset 4
 879              		.cfi_offset 7, -4
 880 0002 87B0     		sub	sp, sp, #28
 881              	.LCFI21:
 882              		.cfi_def_cfa_offset 32
 883 0004 00AF     		add	r7, sp, #0
 884              	.LCFI22:
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 887 0008 0B46     		mov	r3, r1
 888 000a FB70     		strb	r3, [r7, #3]
 532:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 889              		.loc 1 532 0
 890 000c 4FF00503 		mov	r3, #5
 891 0010 7B61     		str	r3, [r7, #20]
 533:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 892              		.loc 1 533 0
 893 0012 7B68     		ldr	r3, [r7, #4]
 894 0014 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 895 0016 FB78     		ldrb	r3, [r7, #3]
 896 0018 D318     		adds	r3, r2, r3
 897 001a DBB2     		uxtb	r3, r3
 898 001c 03F1FF33 		add	r3, r3, #-1
 899 0020 FB74     		strb	r3, [r7, #19]
 534:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 535:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 536:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 900              		.loc 1 536 0
 901 0022 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 902 0024 03F11073 		add	r3, r3, #37748736
 903 0028 03F52863 		add	r3, r3, #2688
 904 002c 4FEA4313 		lsl	r3, r3, #5
 535:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 905              		.loc 1 535 0
 906 0030 FB60     		str	r3, [r7, #12]
 537:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_4>>>*/
 538:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 539:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 540:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is not a transmit message object */
 541:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_4_1>>>*/
 542:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 907              		.loc 1 542 0
 908 0032 FB68     		ldr	r3, [r7, #12]
 909 0034 DB69     		ldr	r3, [r3, #28]
 910 0036 03F40063 		and	r3, r3, #2048
 911 003a 4FEAD323 		lsr	r3, r3, #11
 912 003e 012B     		cmp	r3, #1
 913 0040 03D0     		beq	.L33
 543:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)TRANSMSGOBJ)
 544:../Dave/Generated/src/CAN001/CAN001.c ****   {
 545:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 914              		.loc 1 545 0
 915 0042 4FF00103 		mov	r3, #1
 916 0046 7B61     		str	r3, [r7, #20]
 917 0048 1EE0     		b	.L34
 918              	.L33:
 546:../Dave/Generated/src/CAN001/CAN001.c **** 	DBG002_ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 547:../Dave/Generated/src/CAN001/CAN001.c ****   }
 548:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message is disabled */
 549:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_MSGVAL_Msk, \
 919              		.loc 1 549 0
 920 004a FB68     		ldr	r3, [r7, #12]
 921 004c DB69     		ldr	r3, [r3, #28]
 922 004e 03F02003 		and	r3, r3, #32
 923 0052 4FEA5313 		lsr	r3, r3, #5
 924 0056 002B     		cmp	r3, #0
 925 0058 03D1     		bne	.L35
 550:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN_MO_MOSTAT_MSGVAL_Pos) == 0U)    
 551:../Dave/Generated/src/CAN001/CAN001.c ****   {
 552:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MSGOBJ_DISABLED;
 926              		.loc 1 552 0
 927 005a 4FF00303 		mov	r3, #3
 928 005e 7B61     		str	r3, [r7, #20]
 929 0060 12E0     		b	.L34
 930              	.L35:
 553:../Dave/Generated/src/CAN001/CAN001.c **** 	DBG002_INFO(DBG002_GID_CAN001,Error, 0, NULL);
 554:../Dave/Generated/src/CAN001/CAN001.c ****   }
 555:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if transmission is ongoing on message object */
 556:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_4_2>>>*/
 557:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_TXRQ_Msk, \
 931              		.loc 1 557 0
 932 0062 FB68     		ldr	r3, [r7, #12]
 933 0064 DB69     		ldr	r3, [r3, #28]
 934 0066 03F48073 		and	r3, r3, #256
 935 006a 4FEA1323 		lsr	r3, r3, #8
 936 006e 012B     		cmp	r3, #1
 937 0070 03D1     		bne	.L36
 558:../Dave/Generated/src/CAN001/CAN001.c ****                                                  CAN_MO_MOSTAT_TXRQ_Pos) == 1U)  
 559:../Dave/Generated/src/CAN001/CAN001.c ****   {
 560:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 938              		.loc 1 560 0
 939 0072 4FF00403 		mov	r3, #4
 940 0076 7B61     		str	r3, [r7, #20]
 941 0078 06E0     		b	.L34
 942              	.L36:
 561:../Dave/Generated/src/CAN001/CAN001.c **** 	DBG002_INFO(DBG002_GID_CAN001,Error, 0, NULL);
 562:../Dave/Generated/src/CAN001/CAN001.c ****   }
 563:../Dave/Generated/src/CAN001/CAN001.c ****   else
 564:../Dave/Generated/src/CAN001/CAN001.c ****   {
 565:../Dave/Generated/src/CAN001/CAN001.c ****     /* set TXRQ bit */
 566:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_4_3>>>*/
 567:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk;
 943              		.loc 1 567 0
 944 007a FB68     		ldr	r3, [r7, #12]
 945 007c 4FF08072 		mov	r2, #16777216
 946 0080 DA61     		str	r2, [r3, #28]
 568:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 947              		.loc 1 568 0
 948 0082 4FF00003 		mov	r3, #0
 949 0086 7B61     		str	r3, [r7, #20]
 950              	.L34:
 569:../Dave/Generated/src/CAN001/CAN001.c ****   }
 570:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 571:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 951              		.loc 1 571 0
 952 0088 7B69     		ldr	r3, [r7, #20]
 572:../Dave/Generated/src/CAN001/CAN001.c **** }
 953              		.loc 1 572 0
 954 008a 1846     		mov	r0, r3
 955 008c 07F11C07 		add	r7, r7, #28
 956 0090 BD46     		mov	sp, r7
 957 0092 80BC     		pop	{r7}
 958 0094 7047     		bx	lr
 959              		.cfi_endproc
 960              	.LFE119:
 962 0096 00BF     		.section	.text.CAN001_SendRemoteFrame,"ax",%progbits
 963              		.align	2
 964              		.global	CAN001_SendRemoteFrame
 965              		.thumb
 966              		.thumb_func
 968              	CAN001_SendRemoteFrame:
 969              	.LFB120:
 573:../Dave/Generated/src/CAN001/CAN001.c **** 		
 574:../Dave/Generated/src/CAN001/CAN001.c **** /*
 575:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will put a transmit request to receive message object     
 576:../Dave/Generated/src/CAN001/CAN001.c ****  *  for sending remote frame
 577:../Dave/Generated/src/CAN001/CAN001.c ****  */
 578:../Dave/Generated/src/CAN001/CAN001.c **** 
 579:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_SendRemoteFrame(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 580:../Dave/Generated/src/CAN001/CAN001.c **** {
 970              		.loc 1 580 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 24
 973              		@ frame_needed = 1, uses_anonymous_args = 0
 974              		@ link register save eliminated.
 975 0000 80B4     		push	{r7}
 976              	.LCFI23:
 977              		.cfi_def_cfa_offset 4
 978              		.cfi_offset 7, -4
 979 0002 87B0     		sub	sp, sp, #28
 980              	.LCFI24:
 981              		.cfi_def_cfa_offset 32
 982 0004 00AF     		add	r7, sp, #0
 983              	.LCFI25:
 984              		.cfi_def_cfa_register 7
 985 0006 7860     		str	r0, [r7, #4]
 986 0008 0B46     		mov	r3, r1
 987 000a FB70     		strb	r3, [r7, #3]
 581:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = 0U;
 988              		.loc 1 581 0
 989 000c 4FF00003 		mov	r3, #0
 990 0010 7B61     		str	r3, [r7, #20]
 582:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 991              		.loc 1 582 0
 992 0012 7B68     		ldr	r3, [r7, #4]
 993 0014 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 994 0016 FB78     		ldrb	r3, [r7, #3]
 995 0018 D318     		adds	r3, r2, r3
 996 001a DBB2     		uxtb	r3, r3
 997 001c 03F1FF33 		add	r3, r3, #-1
 998 0020 FB74     		strb	r3, [r7, #19]
 583:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 584:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 585:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 999              		.loc 1 585 0
 1000 0022 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1001 0024 03F11073 		add	r3, r3, #37748736
 1002 0028 03F52863 		add	r3, r3, #2688
 1003 002c 4FEA4313 		lsl	r3, r3, #5
 584:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1004              		.loc 1 584 0
 1005 0030 FB60     		str	r3, [r7, #12]
 586:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_5>>>*/
 587:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 588:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 589:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is a receive message object */
 590:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_5_1>>>*/
 591:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1006              		.loc 1 591 0
 1007 0032 FB68     		ldr	r3, [r7, #12]
 1008 0034 DB69     		ldr	r3, [r3, #28]
 1009 0036 03F40063 		and	r3, r3, #2048
 1010 003a 4FEAD323 		lsr	r3, r3, #11
 1011 003e 002B     		cmp	r3, #0
 1012 0040 03D0     		beq	.L39
 592:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)RECMSGOBJ)
 593:../Dave/Generated/src/CAN001/CAN001.c ****   {
 594:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1013              		.loc 1 594 0
 1014 0042 4FF00103 		mov	r3, #1
 1015 0046 7B61     		str	r3, [r7, #20]
 1016 0048 1EE0     		b	.L40
 1017              	.L39:
 595:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 596:../Dave/Generated/src/CAN001/CAN001.c ****   }
 597:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message is disabled */
 598:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_MSGVAL_Msk, \
 1018              		.loc 1 598 0
 1019 004a FB68     		ldr	r3, [r7, #12]
 1020 004c DB69     		ldr	r3, [r3, #28]
 1021 004e 03F02003 		and	r3, r3, #32
 1022 0052 4FEA5313 		lsr	r3, r3, #5
 1023 0056 002B     		cmp	r3, #0
 1024 0058 03D1     		bne	.L41
 599:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN_MO_MOSTAT_MSGVAL_Pos) == 0U)    		
 600:../Dave/Generated/src/CAN001/CAN001.c ****   {
 601:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MSGOBJ_DISABLED;
 1025              		.loc 1 601 0
 1026 005a 4FF00303 		mov	r3, #3
 1027 005e 7B61     		str	r3, [r7, #20]
 1028 0060 12E0     		b	.L40
 1029              	.L41:
 602:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(DBG002_GID_CAN001,Error, 0, NULL);
 603:../Dave/Generated/src/CAN001/CAN001.c ****   }
 604:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if transmission is ongoing on message object */
 605:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_5_2>>>*/
 606:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_TXRQ_Msk, \
 1030              		.loc 1 606 0
 1031 0062 FB68     		ldr	r3, [r7, #12]
 1032 0064 DB69     		ldr	r3, [r3, #28]
 1033 0066 03F48073 		and	r3, r3, #256
 1034 006a 4FEA1323 		lsr	r3, r3, #8
 1035 006e 012B     		cmp	r3, #1
 1036 0070 03D1     		bne	.L42
 607:../Dave/Generated/src/CAN001/CAN001.c ****                                                 CAN_MO_MOSTAT_TXRQ_Pos) == 1U)  
 608:../Dave/Generated/src/CAN001/CAN001.c ****   {
 609:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 1037              		.loc 1 609 0
 1038 0072 4FF00403 		mov	r3, #4
 1039 0076 7B61     		str	r3, [r7, #20]
 1040 0078 06E0     		b	.L40
 1041              	.L42:
 610:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_INFO(DBG002_GID_CAN001,Error, 0, NULL);
 611:../Dave/Generated/src/CAN001/CAN001.c ****   }
 612:../Dave/Generated/src/CAN001/CAN001.c ****   else
 613:../Dave/Generated/src/CAN001/CAN001.c ****   {
 614:../Dave/Generated/src/CAN001/CAN001.c ****     /* Put transmit request to message object */
 615:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_5_3>>>*/
 616:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk;
 1042              		.loc 1 616 0
 1043 007a FB68     		ldr	r3, [r7, #12]
 1044 007c 4FF08072 		mov	r2, #16777216
 1045 0080 DA61     		str	r2, [r3, #28]
 617:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 1046              		.loc 1 617 0
 1047 0082 4FF00003 		mov	r3, #0
 1048 0086 7B61     		str	r3, [r7, #20]
 1049              	.L40:
 618:../Dave/Generated/src/CAN001/CAN001.c ****   }
 619:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 620:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1050              		.loc 1 620 0
 1051 0088 7B69     		ldr	r3, [r7, #20]
 621:../Dave/Generated/src/CAN001/CAN001.c **** }
 1052              		.loc 1 621 0
 1053 008a 1846     		mov	r0, r3
 1054 008c 07F11C07 		add	r7, r7, #28
 1055 0090 BD46     		mov	sp, r7
 1056 0092 80BC     		pop	{r7}
 1057 0094 7047     		bx	lr
 1058              		.cfi_endproc
 1059              	.LFE120:
 1061 0096 00BF     		.section	.text.CAN001_ReadMsgObj,"ax",%progbits
 1062              		.align	2
 1063              		.global	CAN001_ReadMsgObj
 1064              		.thumb
 1065              		.thumb_func
 1067              	CAN001_ReadMsgObj:
 1068              	.LFB121:
 622:../Dave/Generated/src/CAN001/CAN001.c **** 
 623:../Dave/Generated/src/CAN001/CAN001.c **** /*
 624:../Dave/Generated/src/CAN001/CAN001.c ****  *	This function is will read the message object data bytes 
 625:../Dave/Generated/src/CAN001/CAN001.c ****  *  into message pointer passed as input parameter
 626:../Dave/Generated/src/CAN001/CAN001.c ****  */
 627:../Dave/Generated/src/CAN001/CAN001.c **** 
 628:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ReadMsgObj
 629:../Dave/Generated/src/CAN001/CAN001.c **** (
 630:../Dave/Generated/src/CAN001/CAN001.c ****  const CAN001_HandleType* Handle,
 631:../Dave/Generated/src/CAN001/CAN001.c ****  CAN001_MessageHandleType* SwMsgObjptr,
 632:../Dave/Generated/src/CAN001/CAN001.c ****  uint8_t MsgObjnr
 633:../Dave/Generated/src/CAN001/CAN001.c **** )
 634:../Dave/Generated/src/CAN001/CAN001.c **** {
 1069              		.loc 1 634 0
 1070              		.cfi_startproc
 1071              		@ args = 0, pretend = 0, frame = 32
 1072              		@ frame_needed = 1, uses_anonymous_args = 0
 1073              		@ link register save eliminated.
 1074 0000 80B4     		push	{r7}
 1075              	.LCFI26:
 1076              		.cfi_def_cfa_offset 4
 1077              		.cfi_offset 7, -4
 1078 0002 89B0     		sub	sp, sp, #36
 1079              	.LCFI27:
 1080              		.cfi_def_cfa_offset 40
 1081 0004 00AF     		add	r7, sp, #0
 1082              	.LCFI28:
 1083              		.cfi_def_cfa_register 7
 1084 0006 F860     		str	r0, [r7, #12]
 1085 0008 B960     		str	r1, [r7, #8]
 1086 000a 1346     		mov	r3, r2
 1087 000c FB71     		strb	r3, [r7, #7]
 635:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 1088              		.loc 1 635 0
 1089 000e 4FF00503 		mov	r3, #5
 1090 0012 FB61     		str	r3, [r7, #28]
 636:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count = 0U;
 1091              		.loc 1 636 0
 1092 0014 4FF00003 		mov	r3, #0
 1093 0018 BB61     		str	r3, [r7, #24]
 637:../Dave/Generated/src/CAN001/CAN001.c ****   bool RxPnd = 0U;
 1094              		.loc 1 637 0
 1095 001a 4FF00003 		mov	r3, #0
 1096 001e FB75     		strb	r3, [r7, #23]
 638:../Dave/Generated/src/CAN001/CAN001.c ****   bool NewData = 0U;
 1097              		.loc 1 638 0
 1098 0020 4FF00003 		mov	r3, #0
 1099 0024 BB75     		strb	r3, [r7, #22]
 639:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1100              		.loc 1 639 0
 1101 0026 FB68     		ldr	r3, [r7, #12]
 1102 0028 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1103 002a FB79     		ldrb	r3, [r7, #7]
 1104 002c D318     		adds	r3, r2, r3
 1105 002e DBB2     		uxtb	r3, r3
 1106 0030 03F1FF33 		add	r3, r3, #-1
 1107 0034 7B75     		strb	r3, [r7, #21]
 640:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 641:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 642:../Dave/Generated/src/CAN001/CAN001.c ****                  GET_MO_OFFSET(MsgNo);
 1108              		.loc 1 642 0
 1109 0036 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 1110 0038 03F11073 		add	r3, r3, #37748736
 1111 003c 03F52863 		add	r3, r3, #2688
 1112 0040 4FEA4313 		lsl	r3, r3, #5
 641:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1113              		.loc 1 641 0
 1114 0044 3B61     		str	r3, [r7, #16]
 643:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_6>>>*/
 644:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 645:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 646:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is a receive message object */
 647:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_6_1>>>*/
 648:../Dave/Generated/src/CAN001/CAN001.c ****   if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1115              		.loc 1 648 0
 1116 0046 3B69     		ldr	r3, [r7, #16]
 1117 0048 DB69     		ldr	r3, [r3, #28]
 1118 004a 03F40063 		and	r3, r3, #2048
 1119 004e 4FEAD323 		lsr	r3, r3, #11
 1120 0052 002B     		cmp	r3, #0
 1121 0054 03D0     		beq	.L45
 649:../Dave/Generated/src/CAN001/CAN001.c ****                                    CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)RECMSGOBJ)
 650:../Dave/Generated/src/CAN001/CAN001.c ****   {
 651:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1122              		.loc 1 651 0
 1123 0056 4FF00103 		mov	r3, #1
 1124 005a FB61     		str	r3, [r7, #28]
 1125 005c CAE0     		b	.L46
 1126              	.L45:
 652:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 653:../Dave/Generated/src/CAN001/CAN001.c ****   }
 654:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if reception is ongoing on message object */
 655:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_6_2>>>*/
 656:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_RXUPD_Msk, \
 1127              		.loc 1 656 0
 1128 005e 3B69     		ldr	r3, [r7, #16]
 1129 0060 DB69     		ldr	r3, [r3, #28]
 1130 0062 03F00403 		and	r3, r3, #4
 1131 0066 4FEA9303 		lsr	r3, r3, #2
 1132 006a 012B     		cmp	r3, #1
 1133 006c 03D1     		bne	.L47
 657:../Dave/Generated/src/CAN001/CAN001.c ****                                          CAN_MO_MOSTAT_RXUPD_Pos) == 1U)
 658:../Dave/Generated/src/CAN001/CAN001.c ****   {
 659:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_BUSY;
 1134              		.loc 1 659 0
 1135 006e 4FF00403 		mov	r3, #4
 1136 0072 FB61     		str	r3, [r7, #28]
 1137 0074 BEE0     		b	.L46
 1138              	.L47:
 660:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 661:../Dave/Generated/src/CAN001/CAN001.c ****   }
 662:../Dave/Generated/src/CAN001/CAN001.c ****   else
 663:../Dave/Generated/src/CAN001/CAN001.c ****   {
 664:../Dave/Generated/src/CAN001/CAN001.c ****     /* read message parameters */
 665:../Dave/Generated/src/CAN001/CAN001.c ****     /*<<<DD_CAN001_API_6_3>>>*/
 666:../Dave/Generated/src/CAN001/CAN001.c ****     do
 667:../Dave/Generated/src/CAN001/CAN001.c ****     {
 668:../Dave/Generated/src/CAN001/CAN001.c ****       CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 1139              		.loc 1 668 0
 1140 0076 3B69     		ldr	r3, [r7, #16]
 1141 0078 4FF00802 		mov	r2, #8
 1142 007c DA61     		str	r2, [r3, #28]
 669:../Dave/Generated/src/CAN001/CAN001.c ****       if((RD_REG(CAN_MOxRegs->MOAR, CAN_MO_MOAR_IDE_Msk , \
 1143              		.loc 1 669 0
 1144 007e 3B69     		ldr	r3, [r7, #16]
 1145 0080 9B69     		ldr	r3, [r3, #24]
 1146 0082 03F00053 		and	r3, r3, #536870912
 1147 0086 4FEA5373 		lsr	r3, r3, #29
 1148 008a 002B     		cmp	r3, #0
 1149 008c 2ED1     		bne	.L48
 670:../Dave/Generated/src/CAN001/CAN001.c ****                          CAN_MO_MOAR_IDE_Pos)) == 0U)
 671:../Dave/Generated/src/CAN001/CAN001.c ****       {
 672:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDExten = (uint8_t)STANDARDTYPE;
 1150              		.loc 1 672 0
 1151 008e BB68     		ldr	r3, [r7, #8]
 1152 0090 4FF00002 		mov	r2, #0
 1153 0094 1A72     		strb	r2, [r3, #8]
 673:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->Identifier = (CAN_MOxRegs->MOAR & (uint32_t)CAN_MO_MOAR_STDID_Msk) >> \
 1154              		.loc 1 673 0
 1155 0096 3B69     		ldr	r3, [r7, #16]
 1156 0098 9A69     		ldr	r2, [r3, #24]
 1157 009a 4FF00003 		mov	r3, #0
 1158 009e C1F6FC73 		movt	r3, 8188
 1159 00a2 1340     		ands	r3, r3, r2
 1160 00a4 4FEA9342 		lsr	r2, r3, #18
 1161 00a8 BB68     		ldr	r3, [r7, #8]
 1162 00aa 1A60     		str	r2, [r3, #0]
 674:../Dave/Generated/src/CAN001/CAN001.c ****                                                     CAN_MO_MOAR_STDID_Pos;
 675:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDEMask = (uint8_t)((uint32_t)(CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_MID
 1163              		.loc 1 675 0
 1164 00ac 3B69     		ldr	r3, [r7, #16]
 1165 00ae DB68     		ldr	r3, [r3, #12]
 1166 00b0 03F00053 		and	r3, r3, #536870912
 1167 00b4 4FEA5373 		lsr	r3, r3, #29
 1168 00b8 DAB2     		uxtb	r2, r3
 1169 00ba BB68     		ldr	r3, [r7, #8]
 1170 00bc 5A72     		strb	r2, [r3, #9]
 676:../Dave/Generated/src/CAN001/CAN001.c ****                              CAN_MO_MOAMR_MIDE_Pos);
 677:../Dave/Generated/src/CAN001/CAN001.c ****         if(SwMsgObjptr->IDEMask == 1U)
 1171              		.loc 1 677 0
 1172 00be BB68     		ldr	r3, [r7, #8]
 1173 00c0 5B7A     		ldrb	r3, [r3, #9]	@ zero_extendqisi2
 1174 00c2 012B     		cmp	r3, #1
 1175 00c4 0BD1     		bne	.L49
 678:../Dave/Generated/src/CAN001/CAN001.c ****         {
 679:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->IDMask = (CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAR_STDID_Msk) >> \
 1176              		.loc 1 679 0
 1177 00c6 3B69     		ldr	r3, [r7, #16]
 1178 00c8 DA68     		ldr	r2, [r3, #12]
 1179 00ca 4FF00003 		mov	r3, #0
 1180 00ce C1F6FC73 		movt	r3, 8188
 1181 00d2 1340     		ands	r3, r3, r2
 1182 00d4 4FEA9342 		lsr	r2, r3, #18
 1183 00d8 BB68     		ldr	r3, [r7, #8]
 1184 00da 5A60     		str	r2, [r3, #4]
 1185 00dc 1FE0     		b	.L50
 1186              	.L49:
 680:../Dave/Generated/src/CAN001/CAN001.c ****      	                                             CAN_MO_MOAR_STDID_Pos;
 681:../Dave/Generated/src/CAN001/CAN001.c ****         }
 682:../Dave/Generated/src/CAN001/CAN001.c ****         else
 683:../Dave/Generated/src/CAN001/CAN001.c ****         {
 684:../Dave/Generated/src/CAN001/CAN001.c ****      	   SwMsgObjptr->IDMask = CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_AM_Msk;
 1187              		.loc 1 684 0
 1188 00de 3B69     		ldr	r3, [r7, #16]
 1189 00e0 DB68     		ldr	r3, [r3, #12]
 1190 00e2 23F06042 		bic	r2, r3, #-536870912
 1191 00e6 BB68     		ldr	r3, [r7, #8]
 1192 00e8 5A60     		str	r2, [r3, #4]
 1193 00ea 18E0     		b	.L50
 1194              	.L48:
 685:../Dave/Generated/src/CAN001/CAN001.c ****         }
 686:../Dave/Generated/src/CAN001/CAN001.c ****       }
 687:../Dave/Generated/src/CAN001/CAN001.c ****       else
 688:../Dave/Generated/src/CAN001/CAN001.c ****       {
 689:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDExten = (uint8_t)EXTENDEDTYPE;
 1195              		.loc 1 689 0
 1196 00ec BB68     		ldr	r3, [r7, #8]
 1197 00ee 4FF00102 		mov	r2, #1
 1198 00f2 1A72     		strb	r2, [r3, #8]
 690:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->Identifier = CAN_MOxRegs->MOAR & (uint32_t)CAN_MO_MOAR_ID_Msk;
 1199              		.loc 1 690 0
 1200 00f4 3B69     		ldr	r3, [r7, #16]
 1201 00f6 9B69     		ldr	r3, [r3, #24]
 1202 00f8 23F06042 		bic	r2, r3, #-536870912
 1203 00fc BB68     		ldr	r3, [r7, #8]
 1204 00fe 1A60     		str	r2, [r3, #0]
 691:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDMask = CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_AM_Msk;
 1205              		.loc 1 691 0
 1206 0100 3B69     		ldr	r3, [r7, #16]
 1207 0102 DB68     		ldr	r3, [r3, #12]
 1208 0104 23F06042 		bic	r2, r3, #-536870912
 1209 0108 BB68     		ldr	r3, [r7, #8]
 1210 010a 5A60     		str	r2, [r3, #4]
 692:../Dave/Generated/src/CAN001/CAN001.c ****         SwMsgObjptr->IDEMask = (uint8_t)((uint32_t)(CAN_MOxRegs->MOAMR & (uint32_t)CAN_MO_MOAMR_MID
 1211              		.loc 1 692 0
 1212 010c 3B69     		ldr	r3, [r7, #16]
 1213 010e DB68     		ldr	r3, [r3, #12]
 1214 0110 03F00053 		and	r3, r3, #536870912
 1215 0114 4FEA5373 		lsr	r3, r3, #29
 1216 0118 DAB2     		uxtb	r2, r3
 1217 011a BB68     		ldr	r3, [r7, #8]
 1218 011c 5A72     		strb	r2, [r3, #9]
 1219              	.L50:
 693:../Dave/Generated/src/CAN001/CAN001.c ****                                     CAN_MO_MOAMR_MIDE_Pos);
 694:../Dave/Generated/src/CAN001/CAN001.c ****       }
 695:../Dave/Generated/src/CAN001/CAN001.c ****       SwMsgObjptr->DataLength = (uint8_t)RD_REG(CAN_MOxRegs->MOFCR, \
 1220              		.loc 1 695 0
 1221 011e 3B69     		ldr	r3, [r7, #16]
 1222 0120 1B68     		ldr	r3, [r3, #0]
 1223 0122 03F07063 		and	r3, r3, #251658240
 1224 0126 4FEA1363 		lsr	r3, r3, #24
 1225 012a DAB2     		uxtb	r2, r3
 1226 012c BB68     		ldr	r3, [r7, #8]
 1227 012e 9A72     		strb	r2, [r3, #10]
 696:../Dave/Generated/src/CAN001/CAN001.c ****                              CAN_MO_MOFCR_DLC_Msk, CAN_MO_MOFCR_DLC_Pos);
 697:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1228              		.loc 1 697 0
 1229 0130 4FF00003 		mov	r3, #0
 1230 0134 BB61     		str	r3, [r7, #24]
 1231 0136 3BE0     		b	.L51
 1232              	.L54:
 698:../Dave/Generated/src/CAN001/CAN001.c ****       {
 699:../Dave/Generated/src/CAN001/CAN001.c ****         if(Count < 4U)
 1233              		.loc 1 699 0
 1234 0138 BB69     		ldr	r3, [r7, #24]
 1235 013a 032B     		cmp	r3, #3
 1236 013c 16D8     		bhi	.L52
 700:../Dave/Generated/src/CAN001/CAN001.c ****         {
 701:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->data[Count] = (uint8_t)RD_REG(CAN_MOxRegs->MODATAL, \
 1237              		.loc 1 701 0
 1238 013e 3B69     		ldr	r3, [r7, #16]
 1239 0140 1A69     		ldr	r2, [r3, #16]
 1240 0142 BB69     		ldr	r3, [r7, #24]
 1241 0144 4FEAC303 		lsl	r3, r3, #3
 1242 0148 4FF0FF01 		mov	r1, #255
 1243 014c 01FA03F3 		lsl	r3, r1, r3
 1244 0150 1A40     		ands	r2, r2, r3
 1245 0152 BB69     		ldr	r3, [r7, #24]
 1246 0154 4FEAC303 		lsl	r3, r3, #3
 1247 0158 22FA03F3 		lsr	r3, r2, r3
 1248 015c DAB2     		uxtb	r2, r3
 1249 015e B968     		ldr	r1, [r7, #8]
 1250 0160 BB69     		ldr	r3, [r7, #24]
 1251 0162 CB18     		adds	r3, r1, r3
 1252 0164 03F10803 		add	r3, r3, #8
 1253 0168 DA70     		strb	r2, [r3, #3]
 1254 016a 1DE0     		b	.L53
 1255              	.L52:
 702:../Dave/Generated/src/CAN001/CAN001.c ****                                   (CAN_MO_MODATAL_DB0_Msk << (Count*8U)), \
 703:../Dave/Generated/src/CAN001/CAN001.c ****                                                             (Count*8U));
 704:../Dave/Generated/src/CAN001/CAN001.c ****         }
 705:../Dave/Generated/src/CAN001/CAN001.c ****         else
 706:../Dave/Generated/src/CAN001/CAN001.c ****         {
 707:../Dave/Generated/src/CAN001/CAN001.c ****           SwMsgObjptr->data[Count] = (uint8_t)RD_REG(CAN_MOxRegs->MODATAH, \
 1256              		.loc 1 707 0
 1257 016c 3B69     		ldr	r3, [r7, #16]
 1258 016e 5A69     		ldr	r2, [r3, #20]
 1259 0170 BB69     		ldr	r3, [r7, #24]
 1260 0172 03F10053 		add	r3, r3, #536870912
 1261 0176 A3F10403 		sub	r3, r3, #4
 1262 017a 4FEAC303 		lsl	r3, r3, #3
 1263 017e 4FF0FF01 		mov	r1, #255
 1264 0182 01FA03F3 		lsl	r3, r1, r3
 1265 0186 1A40     		ands	r2, r2, r3
 1266 0188 BB69     		ldr	r3, [r7, #24]
 1267 018a 03F10053 		add	r3, r3, #536870912
 1268 018e A3F10403 		sub	r3, r3, #4
 1269 0192 4FEAC303 		lsl	r3, r3, #3
 1270 0196 22FA03F3 		lsr	r3, r2, r3
 1271 019a DAB2     		uxtb	r2, r3
 1272 019c B968     		ldr	r1, [r7, #8]
 1273 019e BB69     		ldr	r3, [r7, #24]
 1274 01a0 CB18     		adds	r3, r1, r3
 1275 01a2 03F10803 		add	r3, r3, #8
 1276 01a6 DA70     		strb	r2, [r3, #3]
 1277              	.L53:
 697:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1278              		.loc 1 697 0
 1279 01a8 BB69     		ldr	r3, [r7, #24]
 1280 01aa 03F10103 		add	r3, r3, #1
 1281 01ae BB61     		str	r3, [r7, #24]
 1282              	.L51:
 697:../Dave/Generated/src/CAN001/CAN001.c ****       for(Count = 0U; Count < SwMsgObjptr->DataLength; Count++)
 1283              		.loc 1 697 0 is_stmt 0 discriminator 1
 1284 01b0 BB68     		ldr	r3, [r7, #8]
 1285 01b2 9B7A     		ldrb	r3, [r3, #10]	@ zero_extendqisi2
 1286 01b4 1A46     		mov	r2, r3
 1287 01b6 BB69     		ldr	r3, [r7, #24]
 1288 01b8 9A42     		cmp	r2, r3
 1289 01ba BDD8     		bhi	.L54
 708:../Dave/Generated/src/CAN001/CAN001.c ****                                    (CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)) ,\
 709:../Dave/Generated/src/CAN001/CAN001.c ****                                                             ((Count-4U)*8U));
 710:../Dave/Generated/src/CAN001/CAN001.c ****         }
 711:../Dave/Generated/src/CAN001/CAN001.c ****       }
 712:../Dave/Generated/src/CAN001/CAN001.c ****       RxPnd = (bool)CHECK_RXPND_BIT();
 1290              		.loc 1 712 0 is_stmt 1
 1291 01bc 3B69     		ldr	r3, [r7, #16]
 1292 01be DB69     		ldr	r3, [r3, #28]
 1293 01c0 03F00403 		and	r3, r3, #4
 1294 01c4 4FEA9303 		lsr	r3, r3, #2
 1295 01c8 FB75     		strb	r3, [r7, #23]
 713:../Dave/Generated/src/CAN001/CAN001.c ****       NewData = (bool)CHECK_NEWDATA_BIT();
 1296              		.loc 1 713 0
 1297 01ca 3B69     		ldr	r3, [r7, #16]
 1298 01cc DB69     		ldr	r3, [r3, #28]
 1299 01ce 03F00803 		and	r3, r3, #8
 1300 01d2 4FEAD303 		lsr	r3, r3, #3
 1301 01d6 BB75     		strb	r3, [r7, #22]
 714:../Dave/Generated/src/CAN001/CAN001.c ****     } while((RxPnd != 0U) && (NewData != 0U));
 1302              		.loc 1 714 0
 1303 01d8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1304 01da 002B     		cmp	r3, #0
 1305 01dc 03D0     		beq	.L55
 1306              		.loc 1 714 0 is_stmt 0 discriminator 1
 1307 01de BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 1308 01e0 002B     		cmp	r3, #0
 1309 01e2 7FF448AF 		bne	.L47
 1310              	.L55:
 715:../Dave/Generated/src/CAN001/CAN001.c ****      SwMsgObjptr->MsgObjType = RECMSGOBJ;
 1311              		.loc 1 715 0 is_stmt 1
 1312 01e6 BB68     		ldr	r3, [r7, #8]
 1313 01e8 4FF00002 		mov	r2, #0
 1314 01ec 1A75     		strb	r2, [r3, #20]
 716:../Dave/Generated/src/CAN001/CAN001.c ****      Error = (uint32_t)DAVEApp_SUCCESS;
 1315              		.loc 1 716 0
 1316 01ee 4FF00003 		mov	r3, #0
 1317 01f2 FB61     		str	r3, [r7, #28]
 1318              	.L46:
 717:../Dave/Generated/src/CAN001/CAN001.c ****   }
 718:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 719:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1319              		.loc 1 719 0
 1320 01f4 FB69     		ldr	r3, [r7, #28]
 720:../Dave/Generated/src/CAN001/CAN001.c **** }
 1321              		.loc 1 720 0
 1322 01f6 1846     		mov	r0, r3
 1323 01f8 07F12407 		add	r7, r7, #36
 1324 01fc BD46     		mov	sp, r7
 1325 01fe 80BC     		pop	{r7}
 1326 0200 7047     		bx	lr
 1327              		.cfi_endproc
 1328              	.LFE121:
 1330 0202 00BF     		.section	.text.CAN001_UpdateMODataRegisters,"ax",%progbits
 1331              		.align	2
 1332              		.global	CAN001_UpdateMODataRegisters
 1333              		.thumb
 1334              		.thumb_func
 1336              	CAN001_UpdateMODataRegisters:
 1337              	.LFB122:
 721:../Dave/Generated/src/CAN001/CAN001.c **** 
 722:../Dave/Generated/src/CAN001/CAN001.c **** 
 723:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function updates data registers of given message 
 724:../Dave/Generated/src/CAN001/CAN001.c ****  *  object
 725:../Dave/Generated/src/CAN001/CAN001.c ****  */
 726:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_UpdateMODataRegisters
 727:../Dave/Generated/src/CAN001/CAN001.c **** (
 728:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 729:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr,
 730:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t DataLength, 
 731:../Dave/Generated/src/CAN001/CAN001.c ****   const uint8_t* DataPtr
 732:../Dave/Generated/src/CAN001/CAN001.c **** )
 733:../Dave/Generated/src/CAN001/CAN001.c **** {
 1338              		.loc 1 733 0
 1339              		.cfi_startproc
 1340              		@ args = 0, pretend = 0, frame = 32
 1341              		@ frame_needed = 1, uses_anonymous_args = 0
 1342              		@ link register save eliminated.
 1343 0000 80B4     		push	{r7}
 1344              	.LCFI29:
 1345              		.cfi_def_cfa_offset 4
 1346              		.cfi_offset 7, -4
 1347 0002 89B0     		sub	sp, sp, #36
 1348              	.LCFI30:
 1349              		.cfi_def_cfa_offset 40
 1350 0004 00AF     		add	r7, sp, #0
 1351              	.LCFI31:
 1352              		.cfi_def_cfa_register 7
 1353 0006 F860     		str	r0, [r7, #12]
 1354 0008 7B60     		str	r3, [r7, #4]
 1355 000a 0B46     		mov	r3, r1
 1356 000c FB72     		strb	r3, [r7, #11]
 1357 000e 1346     		mov	r3, r2
 1358 0010 BB72     		strb	r3, [r7, #10]
 734:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Error = (uint32_t)CAN001_ERROR;
 1359              		.loc 1 734 0
 1360 0012 4FF00503 		mov	r3, #5
 1361 0016 FB61     		str	r3, [r7, #28]
 735:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t Count = 0U;
 1362              		.loc 1 735 0
 1363 0018 4FF00003 		mov	r3, #0
 1364 001c BB61     		str	r3, [r7, #24]
 736:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1365              		.loc 1 736 0
 1366 001e FB68     		ldr	r3, [r7, #12]
 1367 0020 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1368 0022 FB7A     		ldrb	r3, [r7, #11]
 1369 0024 D318     		adds	r3, r2, r3
 1370 0026 DBB2     		uxtb	r3, r3
 1371 0028 03F1FF33 		add	r3, r3, #-1
 1372 002c FB75     		strb	r3, [r7, #23]
 737:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 738:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 739:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1373              		.loc 1 739 0
 1374 002e FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1375 0030 03F11073 		add	r3, r3, #37748736
 1376 0034 03F52863 		add	r3, r3, #2688
 1377 0038 4FEA4313 		lsl	r3, r3, #5
 738:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1378              		.loc 1 738 0
 1379 003c 3B61     		str	r3, [r7, #16]
 740:../Dave/Generated/src/CAN001/CAN001.c ****   
 741:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_7>>>*/
 742:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 743:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 744:../Dave/Generated/src/CAN001/CAN001.c ****   if (DataLength > 8U)
 1380              		.loc 1 744 0
 1381 003e BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1382 0040 082B     		cmp	r3, #8
 1383 0042 03D9     		bls	.L58
 745:../Dave/Generated/src/CAN001/CAN001.c ****   {
 746:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_INVALID_INPUT;
 1384              		.loc 1 746 0
 1385 0044 4FF00603 		mov	r3, #6
 1386 0048 FB61     		str	r3, [r7, #28]
 1387 004a 82E0     		b	.L59
 1388              	.L58:
 747:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 748:../Dave/Generated/src/CAN001/CAN001.c ****   }
 749:../Dave/Generated/src/CAN001/CAN001.c ****   /* check if message object is not a transmit message object */
 750:../Dave/Generated/src/CAN001/CAN001.c ****   else if( RD_REG(CAN_MOxRegs->MOSTAT, CAN_MO_MOSTAT_DIR_Msk, \
 1389              		.loc 1 750 0
 1390 004c 3B69     		ldr	r3, [r7, #16]
 1391 004e DB69     		ldr	r3, [r3, #28]
 1392 0050 03F40063 		and	r3, r3, #2048
 1393 0054 4FEAD323 		lsr	r3, r3, #11
 1394 0058 012B     		cmp	r3, #1
 1395 005a 03D0     		beq	.L60
 751:../Dave/Generated/src/CAN001/CAN001.c ****                                         CAN_MO_MOSTAT_DIR_Pos) != (uint32_t)TRANSMSGOBJ)
 752:../Dave/Generated/src/CAN001/CAN001.c ****   {
 753:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)CAN001_MO_NOT_ACCEPTABLE;
 1396              		.loc 1 753 0
 1397 005c 4FF00103 		mov	r3, #1
 1398 0060 FB61     		str	r3, [r7, #28]
 1399 0062 76E0     		b	.L59
 1400              	.L60:
 754:../Dave/Generated/src/CAN001/CAN001.c **** 	DBG002_ERROR(DBG002_GID_CAN001,Error, 0, NULL);
 755:../Dave/Generated/src/CAN001/CAN001.c ****   }
 756:../Dave/Generated/src/CAN001/CAN001.c ****   else
 757:../Dave/Generated/src/CAN001/CAN001.c ****   {
 758:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;   
 1401              		.loc 1 758 0
 1402 0064 3B69     		ldr	r3, [r7, #16]
 1403 0066 4FF02002 		mov	r2, #32
 1404 006a DA61     		str	r2, [r3, #28]
 759:../Dave/Generated/src/CAN001/CAN001.c ****     /* Configure data length */
 760:../Dave/Generated/src/CAN001/CAN001.c ****     WR_REG(CAN_MOxRegs->MOFCR, (uint32_t)CAN_MO_MOFCR_DLC_Msk, \
 1405              		.loc 1 760 0
 1406 006c BB7A     		ldrb	r3, [r7, #10]	@ zero_extendqisi2
 1407 006e 4FEA0363 		lsl	r3, r3, #24
 1408 0072 03F07062 		and	r2, r3, #251658240
 1409 0076 3B69     		ldr	r3, [r7, #16]
 1410 0078 1B68     		ldr	r3, [r3, #0]
 1411 007a 23F07063 		bic	r3, r3, #251658240
 1412 007e 1A43     		orrs	r2, r2, r3
 1413 0080 3B69     		ldr	r3, [r7, #16]
 1414 0082 1A60     		str	r2, [r3, #0]
 761:../Dave/Generated/src/CAN001/CAN001.c ****                               CAN_MO_MOFCR_DLC_Pos, (uint32_t)DataLength);
 762:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1415              		.loc 1 762 0
 1416 0084 4FF00003 		mov	r3, #0
 1417 0088 BB61     		str	r3, [r7, #24]
 1418 008a 55E0     		b	.L61
 1419              	.L64:
 763:../Dave/Generated/src/CAN001/CAN001.c ****     {
 764:../Dave/Generated/src/CAN001/CAN001.c ****       if(Count < 4U)
 1420              		.loc 1 764 0
 1421 008c BB69     		ldr	r3, [r7, #24]
 1422 008e 032B     		cmp	r3, #3
 1423 0090 21D8     		bhi	.L62
 765:../Dave/Generated/src/CAN001/CAN001.c ****       {
 766:../Dave/Generated/src/CAN001/CAN001.c ****         WR_REG(CAN_MOxRegs->MODATAL, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << (Count*8U)) , \
 1424              		.loc 1 766 0
 1425 0092 7A68     		ldr	r2, [r7, #4]
 1426 0094 BB69     		ldr	r3, [r7, #24]
 1427 0096 D318     		adds	r3, r2, r3
 1428 0098 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1429 009a 1A46     		mov	r2, r3
 1430 009c BB69     		ldr	r3, [r7, #24]
 1431 009e 4FEAC303 		lsl	r3, r3, #3
 1432 00a2 02FA03F2 		lsl	r2, r2, r3
 1433 00a6 BB69     		ldr	r3, [r7, #24]
 1434 00a8 4FEAC303 		lsl	r3, r3, #3
 1435 00ac 4FF0FF01 		mov	r1, #255
 1436 00b0 01FA03F3 		lsl	r3, r1, r3
 1437 00b4 1A40     		ands	r2, r2, r3
 1438 00b6 3B69     		ldr	r3, [r7, #16]
 1439 00b8 1969     		ldr	r1, [r3, #16]
 1440 00ba BB69     		ldr	r3, [r7, #24]
 1441 00bc 4FEAC303 		lsl	r3, r3, #3
 1442 00c0 4FF0FF00 		mov	r0, #255
 1443 00c4 00FA03F3 		lsl	r3, r0, r3
 1444 00c8 6FEA0303 		mvn	r3, r3
 1445 00cc 0B40     		ands	r3, r3, r1
 1446 00ce 1A43     		orrs	r2, r2, r3
 1447 00d0 3B69     		ldr	r3, [r7, #16]
 1448 00d2 1A61     		str	r2, [r3, #16]
 1449 00d4 2CE0     		b	.L63
 1450              	.L62:
 767:../Dave/Generated/src/CAN001/CAN001.c ****                                         (Count*8U), (uint32_t)(*(DataPtr + Count)));
 768:../Dave/Generated/src/CAN001/CAN001.c ****       }
 769:../Dave/Generated/src/CAN001/CAN001.c ****       else
 770:../Dave/Generated/src/CAN001/CAN001.c ****       {
 771:../Dave/Generated/src/CAN001/CAN001.c ****         WR_REG(CAN_MOxRegs->MODATAH, (uint32_t)(CAN_MO_MODATAL_DB0_Msk << ((Count-4U)*8U)), \
 1451              		.loc 1 771 0
 1452 00d6 7A68     		ldr	r2, [r7, #4]
 1453 00d8 BB69     		ldr	r3, [r7, #24]
 1454 00da D318     		adds	r3, r2, r3
 1455 00dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1456 00de 1A46     		mov	r2, r3
 1457 00e0 BB69     		ldr	r3, [r7, #24]
 1458 00e2 03F10053 		add	r3, r3, #536870912
 1459 00e6 A3F10403 		sub	r3, r3, #4
 1460 00ea 4FEAC303 		lsl	r3, r3, #3
 1461 00ee 02FA03F2 		lsl	r2, r2, r3
 1462 00f2 BB69     		ldr	r3, [r7, #24]
 1463 00f4 03F10053 		add	r3, r3, #536870912
 1464 00f8 A3F10403 		sub	r3, r3, #4
 1465 00fc 4FEAC303 		lsl	r3, r3, #3
 1466 0100 4FF0FF01 		mov	r1, #255
 1467 0104 01FA03F3 		lsl	r3, r1, r3
 1468 0108 1A40     		ands	r2, r2, r3
 1469 010a 3B69     		ldr	r3, [r7, #16]
 1470 010c 5969     		ldr	r1, [r3, #20]
 1471 010e BB69     		ldr	r3, [r7, #24]
 1472 0110 03F10053 		add	r3, r3, #536870912
 1473 0114 A3F10403 		sub	r3, r3, #4
 1474 0118 4FEAC303 		lsl	r3, r3, #3
 1475 011c 4FF0FF00 		mov	r0, #255
 1476 0120 00FA03F3 		lsl	r3, r0, r3
 1477 0124 6FEA0303 		mvn	r3, r3
 1478 0128 0B40     		ands	r3, r3, r1
 1479 012a 1A43     		orrs	r2, r2, r3
 1480 012c 3B69     		ldr	r3, [r7, #16]
 1481 012e 5A61     		str	r2, [r3, #20]
 1482              	.L63:
 762:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1483              		.loc 1 762 0
 1484 0130 BB69     		ldr	r3, [r7, #24]
 1485 0132 03F10103 		add	r3, r3, #1
 1486 0136 BB61     		str	r3, [r7, #24]
 1487              	.L61:
 762:../Dave/Generated/src/CAN001/CAN001.c ****     for(Count = 0U; Count < DataLength; Count++) 
 1488              		.loc 1 762 0 is_stmt 0 discriminator 1
 1489 0138 BA7A     		ldrb	r2, [r7, #10]	@ zero_extendqisi2
 1490 013a BB69     		ldr	r3, [r7, #24]
 1491 013c 9A42     		cmp	r2, r3
 1492 013e A5D8     		bhi	.L64
 772:../Dave/Generated/src/CAN001/CAN001.c ****                                    ((Count-4U)*8U), (uint32_t)(*(DataPtr + Count)));
 773:../Dave/Generated/src/CAN001/CAN001.c ****       }
 774:../Dave/Generated/src/CAN001/CAN001.c ****     }
 775:../Dave/Generated/src/CAN001/CAN001.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1, NEWDATA and RXEN */
 776:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | \
 1493              		.loc 1 776 0 is_stmt 1
 1494 0140 3A69     		ldr	r2, [r7, #16]
 1495 0142 4FF04003 		mov	r3, #64
 1496 0146 C0F2A863 		movt	r3, 1704
 1497 014a D361     		str	r3, [r2, #28]
 777:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETTXEN1_Msk | \
 778:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 779:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETMSGVAL_Msk | \
 780:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETNEWDAT_Msk | \
 781:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_SETRXEN_Msk | \
 782:../Dave/Generated/src/CAN001/CAN001.c ****                         CAN_MO_MOCTR_RESRTSEL_Msk);
 783:../Dave/Generated/src/CAN001/CAN001.c ****     Error = (uint32_t)DAVEApp_SUCCESS;
 1498              		.loc 1 783 0
 1499 014c 4FF00003 		mov	r3, #0
 1500 0150 FB61     		str	r3, [r7, #28]
 1501              	.L59:
 784:../Dave/Generated/src/CAN001/CAN001.c ****   }
 785:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 786:../Dave/Generated/src/CAN001/CAN001.c ****   return Error;
 1502              		.loc 1 786 0
 1503 0152 FB69     		ldr	r3, [r7, #28]
 787:../Dave/Generated/src/CAN001/CAN001.c **** }
 1504              		.loc 1 787 0
 1505 0154 1846     		mov	r0, r3
 1506 0156 07F12407 		add	r7, r7, #36
 1507 015a BD46     		mov	sp, r7
 1508 015c 80BC     		pop	{r7}
 1509 015e 7047     		bx	lr
 1510              		.cfi_endproc
 1511              	.LFE122:
 1513              		.section	.text.CAN001_GetMOFlagStatus,"ax",%progbits
 1514              		.align	2
 1515              		.global	CAN001_GetMOFlagStatus
 1516              		.thumb
 1517              		.thumb_func
 1519              	CAN001_GetMOFlagStatus:
 1520              	.LFB123:
 788:../Dave/Generated/src/CAN001/CAN001.c **** 
 789:../Dave/Generated/src/CAN001/CAN001.c **** 
 790:../Dave/Generated/src/CAN001/CAN001.c ****     
 791:../Dave/Generated/src/CAN001/CAN001.c **** /*
 792:../Dave/Generated/src/CAN001/CAN001.c ****  *  This function is used to return the status of the message object specified. 
 793:../Dave/Generated/src/CAN001/CAN001.c ****  *  The flag value to be returned should be passed as input parameter of 
 794:../Dave/Generated/src/CAN001/CAN001.c ****  *   type MsgStatus 
 795:../Dave/Generated/src/CAN001/CAN001.c ****  */
 796:../Dave/Generated/src/CAN001/CAN001.c **** 
 797:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetMOFlagStatus
 798:../Dave/Generated/src/CAN001/CAN001.c **** (
 799:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 800:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr, 
 801:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MsgStatusType NewMsgStatus
 802:../Dave/Generated/src/CAN001/CAN001.c ****  )
 803:../Dave/Generated/src/CAN001/CAN001.c **** {
 1521              		.loc 1 803 0
 1522              		.cfi_startproc
 1523              		@ args = 0, pretend = 0, frame = 24
 1524              		@ frame_needed = 1, uses_anonymous_args = 0
 1525              		@ link register save eliminated.
 1526 0000 80B4     		push	{r7}
 1527              	.LCFI32:
 1528              		.cfi_def_cfa_offset 4
 1529              		.cfi_offset 7, -4
 1530 0002 87B0     		sub	sp, sp, #28
 1531              	.LCFI33:
 1532              		.cfi_def_cfa_offset 32
 1533 0004 00AF     		add	r7, sp, #0
 1534              	.LCFI34:
 1535              		.cfi_def_cfa_register 7
 1536 0006 7860     		str	r0, [r7, #4]
 1537 0008 1346     		mov	r3, r2
 1538 000a 0A46     		mov	r2, r1
 1539 000c FA70     		strb	r2, [r7, #3]
 1540 000e BB70     		strb	r3, [r7, #2]
 804:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1541              		.loc 1 804 0
 1542 0010 4FF00503 		mov	r3, #5
 1543 0014 7B61     		str	r3, [r7, #20]
 805:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1544              		.loc 1 805 0
 1545 0016 7B68     		ldr	r3, [r7, #4]
 1546 0018 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1547 001a FB78     		ldrb	r3, [r7, #3]
 1548 001c D318     		adds	r3, r2, r3
 1549 001e DBB2     		uxtb	r3, r3
 1550 0020 03F1FF33 		add	r3, r3, #-1
 1551 0024 FB74     		strb	r3, [r7, #19]
 806:../Dave/Generated/src/CAN001/CAN001.c **** 	/* Mapping to message object offset value*/
 807:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 808:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1552              		.loc 1 808 0
 1553 0026 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1554 0028 03F11073 		add	r3, r3, #37748736
 1555 002c 03F52863 		add	r3, r3, #2688
 1556 0030 4FEA4313 		lsl	r3, r3, #5
 807:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1557              		.loc 1 807 0
 1558 0034 FB60     		str	r3, [r7, #12]
 809:../Dave/Generated/src/CAN001/CAN001.c ****    /*<<<DD_CAN001_API_8>>>*/
 810:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 811:../Dave/Generated/src/CAN001/CAN001.c ****   do
 812:../Dave/Generated/src/CAN001/CAN001.c ****   {
 813:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 814:../Dave/Generated/src/CAN001/CAN001.c ****     DBG002_N((NewMsgStatus != RECEIVE_PENDING) && (NewMsgStatus != TRANSMIT_PENDING) \
 815:../Dave/Generated/src/CAN001/CAN001.c ****       && (NewMsgStatus != NEW_DATA) && (NewMsgStatus != MESSAGE_LOST));
 816:../Dave/Generated/src/CAN001/CAN001.c **** 
 817:../Dave/Generated/src/CAN001/CAN001.c ****     /* Check message object status */
 818:../Dave/Generated/src/CAN001/CAN001.c ****     if((CAN_MOxRegs->MOSTAT & (uint32_t)NewMsgStatus) != 0U)
 1559              		.loc 1 818 0
 1560 0036 FB68     		ldr	r3, [r7, #12]
 1561 0038 DA69     		ldr	r2, [r3, #28]
 1562 003a BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1563 003c 1340     		ands	r3, r3, r2
 1564 003e 002B     		cmp	r3, #0
 1565 0040 03D0     		beq	.L67
 819:../Dave/Generated/src/CAN001/CAN001.c ****     {
 820:../Dave/Generated/src/CAN001/CAN001.c ****       Status = (uint32_t)CAN_SET;
 1566              		.loc 1 820 0
 1567 0042 4FF00103 		mov	r3, #1
 1568 0046 7B61     		str	r3, [r7, #20]
 1569 0048 02E0     		b	.L68
 1570              	.L67:
 821:../Dave/Generated/src/CAN001/CAN001.c ****     }
 822:../Dave/Generated/src/CAN001/CAN001.c ****     else
 823:../Dave/Generated/src/CAN001/CAN001.c ****     {
 824:../Dave/Generated/src/CAN001/CAN001.c ****       Status = (uint32_t)CAN_RESET;
 1571              		.loc 1 824 0
 1572 004a 4FF00003 		mov	r3, #0
 1573 004e 7B61     		str	r3, [r7, #20]
 1574              	.L68:
 825:../Dave/Generated/src/CAN001/CAN001.c ****     }
 826:../Dave/Generated/src/CAN001/CAN001.c ****   }while(0);
 827:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 828:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1575              		.loc 1 828 0
 1576 0050 7B69     		ldr	r3, [r7, #20]
 829:../Dave/Generated/src/CAN001/CAN001.c **** }
 1577              		.loc 1 829 0
 1578 0052 1846     		mov	r0, r3
 1579 0054 07F11C07 		add	r7, r7, #28
 1580 0058 BD46     		mov	sp, r7
 1581 005a 80BC     		pop	{r7}
 1582 005c 7047     		bx	lr
 1583              		.cfi_endproc
 1584              	.LFE123:
 1586 005e 00BF     		.section	.text.CAN001_GetNodeFlagStatus,"ax",%progbits
 1587              		.align	2
 1588              		.global	CAN001_GetNodeFlagStatus
 1589              		.thumb
 1590              		.thumb_func
 1592              	CAN001_GetNodeFlagStatus:
 1593              	.LFB124:
 830:../Dave/Generated/src/CAN001/CAN001.c **** 
 831:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to return the status of the node specified.
 832:../Dave/Generated/src/CAN001/CAN001.c ****  *   The flag value to be returned should be passed as input parameter 
 833:../Dave/Generated/src/CAN001/CAN001.c ****  *   of type MsgStatusType.
 834:../Dave/Generated/src/CAN001/CAN001.c ****  */
 835:../Dave/Generated/src/CAN001/CAN001.c **** 
 836:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetNodeFlagStatus
 837:../Dave/Generated/src/CAN001/CAN001.c **** (
 838:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 839:../Dave/Generated/src/CAN001/CAN001.c ****   CAN001_NodeStatusType NewNodeStatus
 840:../Dave/Generated/src/CAN001/CAN001.c **** )
 841:../Dave/Generated/src/CAN001/CAN001.c **** {
 1594              		.loc 1 841 0
 1595              		.cfi_startproc
 1596              		@ args = 0, pretend = 0, frame = 16
 1597              		@ frame_needed = 1, uses_anonymous_args = 0
 1598              		@ link register save eliminated.
 1599 0000 80B4     		push	{r7}
 1600              	.LCFI35:
 1601              		.cfi_def_cfa_offset 4
 1602              		.cfi_offset 7, -4
 1603 0002 85B0     		sub	sp, sp, #20
 1604              	.LCFI36:
 1605              		.cfi_def_cfa_offset 24
 1606 0004 00AF     		add	r7, sp, #0
 1607              	.LCFI37:
 1608              		.cfi_def_cfa_register 7
 1609 0006 7860     		str	r0, [r7, #4]
 1610 0008 0B46     		mov	r3, r1
 1611 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 842:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1612              		.loc 1 842 0
 1613 000c 4FF00503 		mov	r3, #5
 1614 0010 FB60     		str	r3, [r7, #12]
 843:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to Node Register offset value*/  
 844:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 1615              		.loc 1 844 0
 1616 0012 7B68     		ldr	r3, [r7, #4]
 1617 0014 9B68     		ldr	r3, [r3, #8]
 1618 0016 BB60     		str	r3, [r7, #8]
 845:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_9>>>*/
 846:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 847:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((NewNodeStatus != CAN001_ALERT_STATUS) && (NewNodeStatus != CAN001_ERROR_WARN_STATUS) \
 848:../Dave/Generated/src/CAN001/CAN001.c ****      && (NewNodeStatus != CAN001_BUS_OFF_STATUS) && (NewNodeStatus  != CAN001_LIST_LENGTH_ERROR)\
 849:../Dave/Generated/src/CAN001/CAN001.c ****      && (NewNodeStatus != CAN001_LIST_OBJECT_ERROR));
 850:../Dave/Generated/src/CAN001/CAN001.c **** 
 851:../Dave/Generated/src/CAN001/CAN001.c ****   /* Check Node status */
 852:../Dave/Generated/src/CAN001/CAN001.c ****   if ((CAN_NodexRegs->NSR & (uint32_t)NewNodeStatus) != 0U)
 1619              		.loc 1 852 0
 1620 0018 BB68     		ldr	r3, [r7, #8]
 1621 001a 5A68     		ldr	r2, [r3, #4]
 1622 001c 7B88     		ldrh	r3, [r7, #2]
 1623 001e 1340     		ands	r3, r3, r2
 1624 0020 002B     		cmp	r3, #0
 1625 0022 03D0     		beq	.L71
 853:../Dave/Generated/src/CAN001/CAN001.c ****   {
 854:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN_SET;
 1626              		.loc 1 854 0
 1627 0024 4FF00103 		mov	r3, #1
 1628 0028 FB60     		str	r3, [r7, #12]
 1629 002a 02E0     		b	.L72
 1630              	.L71:
 855:../Dave/Generated/src/CAN001/CAN001.c ****   }
 856:../Dave/Generated/src/CAN001/CAN001.c ****   else 
 857:../Dave/Generated/src/CAN001/CAN001.c ****   {
 858:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN_RESET;
 1631              		.loc 1 858 0
 1632 002c 4FF00003 		mov	r3, #0
 1633 0030 FB60     		str	r3, [r7, #12]
 1634              	.L72:
 859:../Dave/Generated/src/CAN001/CAN001.c ****   }          
 860:../Dave/Generated/src/CAN001/CAN001.c **** 
 861:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 862:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1635              		.loc 1 862 0
 1636 0032 FB68     		ldr	r3, [r7, #12]
 863:../Dave/Generated/src/CAN001/CAN001.c **** }
 1637              		.loc 1 863 0
 1638 0034 1846     		mov	r0, r3
 1639 0036 07F11407 		add	r7, r7, #20
 1640 003a BD46     		mov	sp, r7
 1641 003c 80BC     		pop	{r7}
 1642 003e 7047     		bx	lr
 1643              		.cfi_endproc
 1644              	.LFE124:
 1646              		.section	.text.CAN001_GetMOPndRegisterBitStatus,"ax",%progbits
 1647              		.align	2
 1648              		.global	CAN001_GetMOPndRegisterBitStatus
 1649              		.thumb
 1650              		.thumb_func
 1652              	CAN001_GetMOPndRegisterBitStatus:
 1653              	.LFB125:
 864:../Dave/Generated/src/CAN001/CAN001.c **** 
 865:../Dave/Generated/src/CAN001/CAN001.c **** 
 866:../Dave/Generated/src/CAN001/CAN001.c **** 
 867:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function will return the message object's message 
 868:../Dave/Generated/src/CAN001/CAN001.c ****  *  pending register bit value
 869:../Dave/Generated/src/CAN001/CAN001.c ****  */
 870:../Dave/Generated/src/CAN001/CAN001.c **** 
 871:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_GetMOPndRegisterBitStatus
 872:../Dave/Generated/src/CAN001/CAN001.c **** (
 873:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 874:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr
 875:../Dave/Generated/src/CAN001/CAN001.c **** )
 876:../Dave/Generated/src/CAN001/CAN001.c **** {
 1654              		.loc 1 876 0
 1655              		.cfi_startproc
 1656              		@ args = 0, pretend = 0, frame = 16
 1657              		@ frame_needed = 1, uses_anonymous_args = 0
 1658              		@ link register save eliminated.
 1659 0000 80B4     		push	{r7}
 1660              	.LCFI38:
 1661              		.cfi_def_cfa_offset 4
 1662              		.cfi_offset 7, -4
 1663 0002 85B0     		sub	sp, sp, #20
 1664              	.LCFI39:
 1665              		.cfi_def_cfa_offset 24
 1666 0004 00AF     		add	r7, sp, #0
 1667              	.LCFI40:
 1668              		.cfi_def_cfa_register 7
 1669 0006 7860     		str	r0, [r7, #4]
 1670 0008 0B46     		mov	r3, r1
 1671 000a FB70     		strb	r3, [r7, #3]
 877:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1672              		.loc 1 877 0
 1673 000c 4FF00503 		mov	r3, #5
 1674 0010 FB60     		str	r3, [r7, #12]
 878:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t* MsgPndRegOffset;
 879:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_11>>>*/
 880:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 881:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_N((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo));
 882:../Dave/Generated/src/CAN001/CAN001.c ****   MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 1675              		.loc 1 882 0
 1676 0012 7B68     		ldr	r3, [r7, #4]
 1677 0014 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1678 0016 1A46     		mov	r2, r3
 1679 0018 45F25003 		movw	r3, #20560
 1680 001c C1F20023 		movt	r3, 4608
 1681 0020 D318     		adds	r3, r2, r3
 1682 0022 4FEA8303 		lsl	r3, r3, #2
 1683 0026 BB60     		str	r3, [r7, #8]
 883:../Dave/Generated/src/CAN001/CAN001.c ****   Status = RD_REG((*MsgPndRegOffset), (CAN_MSPND_PND_Msk << (MsgObjnr-1U)), \
 1684              		.loc 1 883 0
 1685 0028 BB68     		ldr	r3, [r7, #8]
 1686 002a 1A68     		ldr	r2, [r3, #0]
 1687 002c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1688 002e 03F1FF33 		add	r3, r3, #-1
 1689 0032 4FF0FF31 		mov	r1, #-1
 1690 0036 01FA03F3 		lsl	r3, r1, r3
 1691 003a 1A40     		ands	r2, r2, r3
 1692 003c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1693 003e 03F1FF33 		add	r3, r3, #-1
 1694 0042 22FA03F3 		lsr	r3, r2, r3
 1695 0046 FB60     		str	r3, [r7, #12]
 884:../Dave/Generated/src/CAN001/CAN001.c ****                                                                   (MsgObjnr-1U));
 885:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 886:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1696              		.loc 1 886 0
 1697 0048 FB68     		ldr	r3, [r7, #12]
 887:../Dave/Generated/src/CAN001/CAN001.c **** }
 1698              		.loc 1 887 0
 1699 004a 1846     		mov	r0, r3
 1700 004c 07F11407 		add	r7, r7, #20
 1701 0050 BD46     		mov	sp, r7
 1702 0052 80BC     		pop	{r7}
 1703 0054 7047     		bx	lr
 1704              		.cfi_endproc
 1705              	.LFE125:
 1707 0056 00BF     		.section	.text.CAN001_ClearMOFlagStatus,"ax",%progbits
 1708              		.align	2
 1709              		.global	CAN001_ClearMOFlagStatus
 1710              		.thumb
 1711              		.thumb_func
 1713              	CAN001_ClearMOFlagStatus:
 1714              	.LFB126:
 888:../Dave/Generated/src/CAN001/CAN001.c **** 
 889:../Dave/Generated/src/CAN001/CAN001.c **** 
 890:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to clear the status bits of message object
 891:../Dave/Generated/src/CAN001/CAN001.c ****  *  register MOSTATx. The input parameter can be a combination of 
 892:../Dave/Generated/src/CAN001/CAN001.c ****  *  enum type MsgStatus
 893:../Dave/Generated/src/CAN001/CAN001.c ****  */
 894:../Dave/Generated/src/CAN001/CAN001.c **** 
 895:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ClearMOFlagStatus
 896:../Dave/Generated/src/CAN001/CAN001.c **** (
 897:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 898:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgObjnr, 
 899:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MsgStatusType NewMsgStatus
 900:../Dave/Generated/src/CAN001/CAN001.c **** )
 901:../Dave/Generated/src/CAN001/CAN001.c **** {
 1715              		.loc 1 901 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 24
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
 1720 0000 80B4     		push	{r7}
 1721              	.LCFI41:
 1722              		.cfi_def_cfa_offset 4
 1723              		.cfi_offset 7, -4
 1724 0002 87B0     		sub	sp, sp, #28
 1725              	.LCFI42:
 1726              		.cfi_def_cfa_offset 32
 1727 0004 00AF     		add	r7, sp, #0
 1728              	.LCFI43:
 1729              		.cfi_def_cfa_register 7
 1730 0006 7860     		str	r0, [r7, #4]
 1731 0008 1346     		mov	r3, r2
 1732 000a 0A46     		mov	r2, r1
 1733 000c FA70     		strb	r2, [r7, #3]
 1734 000e BB70     		strb	r3, [r7, #2]
 902:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1735              		.loc 1 902 0
 1736 0010 4FF00503 		mov	r3, #5
 1737 0014 7B61     		str	r3, [r7, #20]
 903:../Dave/Generated/src/CAN001/CAN001.c ****   uint8_t MsgNo = (uint8_t)(Handle->FirstMOMapping+(MsgObjnr-1U));
 1738              		.loc 1 903 0
 1739 0016 7B68     		ldr	r3, [r7, #4]
 1740 0018 9A7B     		ldrb	r2, [r3, #14]	@ zero_extendqisi2
 1741 001a FB78     		ldrb	r3, [r7, #3]
 1742 001c D318     		adds	r3, r2, r3
 1743 001e DBB2     		uxtb	r3, r3
 1744 0020 03F1FF33 		add	r3, r3, #-1
 1745 0024 FB74     		strb	r3, [r7, #19]
 904:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to message object offset value*/
 905:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 906:../Dave/Generated/src/CAN001/CAN001.c ****                   GET_MO_OFFSET(MsgNo);
 1746              		.loc 1 906 0
 1747 0026 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 1748 0028 03F11073 		add	r3, r3, #37748736
 1749 002c 03F52863 		add	r3, r3, #2688
 1750 0030 4FEA4313 		lsl	r3, r3, #5
 905:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_MO_TypeDef* CAN_MOxRegs = \
 1751              		.loc 1 905 0
 1752 0034 FB60     		str	r3, [r7, #12]
 907:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_12>>>*/
 908:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 909:../Dave/Generated/src/CAN001/CAN001.c ****   if ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo))
 1753              		.loc 1 909 0
 1754 0036 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1755 0038 002B     		cmp	r3, #0
 1756 003a 04D0     		beq	.L77
 1757              		.loc 1 909 0 is_stmt 0 discriminator 1
 1758 003c 7B68     		ldr	r3, [r7, #4]
 1759 003e DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1760 0040 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1761 0042 9A42     		cmp	r2, r3
 1762 0044 03D9     		bls	.L78
 1763              	.L77:
 910:../Dave/Generated/src/CAN001/CAN001.c ****   {
 911:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN001_MO_NOT_FOUND;
 1764              		.loc 1 911 0 is_stmt 1
 1765 0046 4FF00203 		mov	r3, #2
 1766 004a 7B61     		str	r3, [r7, #20]
 1767 004c 07E0     		b	.L79
 1768              	.L78:
 912:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Status, 0, NULL);
 913:../Dave/Generated/src/CAN001/CAN001.c ****   }
 914:../Dave/Generated/src/CAN001/CAN001.c ****   else
 915:../Dave/Generated/src/CAN001/CAN001.c ****   {
 916:../Dave/Generated/src/CAN001/CAN001.c ****     CAN_MOxRegs->MOCTR = CAN001_CLEAR_MO_STATUS_MASK & (uint32_t)NewMsgStatus;
 1769              		.loc 1 916 0
 1770 004e BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1771 0050 03F01B02 		and	r2, r3, #27
 1772 0054 FB68     		ldr	r3, [r7, #12]
 1773 0056 DA61     		str	r2, [r3, #28]
 917:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1774              		.loc 1 917 0
 1775 0058 4FF00003 		mov	r3, #0
 1776 005c 7B61     		str	r3, [r7, #20]
 1777              	.L79:
 918:../Dave/Generated/src/CAN001/CAN001.c ****   }
 919:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 920:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1778              		.loc 1 920 0
 1779 005e 7B69     		ldr	r3, [r7, #20]
 921:../Dave/Generated/src/CAN001/CAN001.c **** }	
 1780              		.loc 1 921 0
 1781 0060 1846     		mov	r0, r3
 1782 0062 07F11C07 		add	r7, r7, #28
 1783 0066 BD46     		mov	sp, r7
 1784 0068 80BC     		pop	{r7}
 1785 006a 7047     		bx	lr
 1786              		.cfi_endproc
 1787              	.LFE126:
 1789              		.section	.text.CAN001_ClearNodeFlagStatus,"ax",%progbits
 1790              		.align	2
 1791              		.global	CAN001_ClearNodeFlagStatus
 1792              		.thumb
 1793              		.thumb_func
 1795              	CAN001_ClearNodeFlagStatus:
 1796              	.LFB127:
 922:../Dave/Generated/src/CAN001/CAN001.c **** 
 923:../Dave/Generated/src/CAN001/CAN001.c **** /*  This function is used to clear the status bits of Node 
 924:../Dave/Generated/src/CAN001/CAN001.c ****  *   register NSRx. The input parameter can be a combination
 925:../Dave/Generated/src/CAN001/CAN001.c ****  *   of enum type NodeStatus  
 926:../Dave/Generated/src/CAN001/CAN001.c ****  */
 927:../Dave/Generated/src/CAN001/CAN001.c **** 
 928:../Dave/Generated/src/CAN001/CAN001.c **** void CAN001_ClearNodeFlagStatus
 929:../Dave/Generated/src/CAN001/CAN001.c **** (
 930:../Dave/Generated/src/CAN001/CAN001.c ****   const CAN001_HandleType* Handle, 
 931:../Dave/Generated/src/CAN001/CAN001.c ****   CAN001_NodeStatusType NewNodeStatus
 932:../Dave/Generated/src/CAN001/CAN001.c **** )
 933:../Dave/Generated/src/CAN001/CAN001.c **** {
 1797              		.loc 1 933 0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 16
 1800              		@ frame_needed = 1, uses_anonymous_args = 0
 1801              		@ link register save eliminated.
 1802 0000 80B4     		push	{r7}
 1803              	.LCFI44:
 1804              		.cfi_def_cfa_offset 4
 1805              		.cfi_offset 7, -4
 1806 0002 85B0     		sub	sp, sp, #20
 1807              	.LCFI45:
 1808              		.cfi_def_cfa_offset 24
 1809 0004 00AF     		add	r7, sp, #0
 1810              	.LCFI46:
 1811              		.cfi_def_cfa_register 7
 1812 0006 7860     		str	r0, [r7, #4]
 1813 0008 0B46     		mov	r3, r1
 1814 000a 7B80     		strh	r3, [r7, #2]	@ movhi
 934:../Dave/Generated/src/CAN001/CAN001.c ****   /* Mapping to Node Register offset value*/  
 935:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NODE_TypeDef* CAN_NodexRegs = Handle->CanNodeRegs;
 1815              		.loc 1 935 0
 1816 000c 7B68     		ldr	r3, [r7, #4]
 1817 000e 9B68     		ldr	r3, [r3, #8]
 1818 0010 FB60     		str	r3, [r7, #12]
 936:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_13>>>*/
 937:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 938:../Dave/Generated/src/CAN001/CAN001.c ****   CAN_NodexRegs->NSR &= ~((uint32_t)NewNodeStatus & \
 1819              		.loc 1 938 0
 1820 0012 FB68     		ldr	r3, [r7, #12]
 1821 0014 5A68     		ldr	r2, [r3, #4]
 1822 0016 7B88     		ldrh	r3, [r7, #2]
 1823 0018 03F47873 		and	r3, r3, #992
 1824 001c 6FEA0303 		mvn	r3, r3
 1825 0020 1A40     		ands	r2, r2, r3
 1826 0022 FB68     		ldr	r3, [r7, #12]
 1827 0024 5A60     		str	r2, [r3, #4]
 939:../Dave/Generated/src/CAN001/CAN001.c ****                                               CAN001_CLEAR_NODE_STATUS_MASK); 	
 940:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 941:../Dave/Generated/src/CAN001/CAN001.c **** }
 1828              		.loc 1 941 0
 1829 0026 07F11407 		add	r7, r7, #20
 1830 002a BD46     		mov	sp, r7
 1831 002c 80BC     		pop	{r7}
 1832 002e 7047     		bx	lr
 1833              		.cfi_endproc
 1834              	.LFE127:
 1836              		.section	.text.CAN001_ClearMOPndRegisterBit,"ax",%progbits
 1837              		.align	2
 1838              		.global	CAN001_ClearMOPndRegisterBit
 1839              		.thumb
 1840              		.thumb_func
 1842              	CAN001_ClearMOPndRegisterBit:
 1843              	.LFB128:
 942:../Dave/Generated/src/CAN001/CAN001.c **** 
 943:../Dave/Generated/src/CAN001/CAN001.c **** 
 944:../Dave/Generated/src/CAN001/CAN001.c **** 
 945:../Dave/Generated/src/CAN001/CAN001.c **** 
 946:../Dave/Generated/src/CAN001/CAN001.c **** /*  These function is used to clear message pending register bit
 947:../Dave/Generated/src/CAN001/CAN001.c ****  *  of specific message object.
 948:../Dave/Generated/src/CAN001/CAN001.c ****  */
 949:../Dave/Generated/src/CAN001/CAN001.c **** 
 950:../Dave/Generated/src/CAN001/CAN001.c **** status_t CAN001_ClearMOPndRegisterBit(const CAN001_HandleType* Handle, uint8_t MsgObjnr)
 951:../Dave/Generated/src/CAN001/CAN001.c **** {
 1844              		.loc 1 951 0
 1845              		.cfi_startproc
 1846              		@ args = 0, pretend = 0, frame = 16
 1847              		@ frame_needed = 1, uses_anonymous_args = 0
 1848              		@ link register save eliminated.
 1849 0000 80B4     		push	{r7}
 1850              	.LCFI47:
 1851              		.cfi_def_cfa_offset 4
 1852              		.cfi_offset 7, -4
 1853 0002 85B0     		sub	sp, sp, #20
 1854              	.LCFI48:
 1855              		.cfi_def_cfa_offset 24
 1856 0004 00AF     		add	r7, sp, #0
 1857              	.LCFI49:
 1858              		.cfi_def_cfa_register 7
 1859 0006 7860     		str	r0, [r7, #4]
 1860 0008 0B46     		mov	r3, r1
 1861 000a FB70     		strb	r3, [r7, #3]
 952:../Dave/Generated/src/CAN001/CAN001.c ****   status_t Status = (uint32_t)CAN001_ERROR;
 1862              		.loc 1 952 0
 1863 000c 4FF00503 		mov	r3, #5
 1864 0010 FB60     		str	r3, [r7, #12]
 953:../Dave/Generated/src/CAN001/CAN001.c ****   uint32_t* MsgPndRegOffset = 0;
 1865              		.loc 1 953 0
 1866 0012 4FF00003 		mov	r3, #0
 1867 0016 BB60     		str	r3, [r7, #8]
 954:../Dave/Generated/src/CAN001/CAN001.c ****   /*<<<DD_CAN001_API_14>>>*/
 955:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_ENTRY(DBG002_GID_CAN001,CAN001_FUNCTION_ENTRY);
 956:../Dave/Generated/src/CAN001/CAN001.c ****   if ((MsgObjnr == 0U)||(MsgObjnr > Handle->NodeMONo))
 1868              		.loc 1 956 0
 1869 0018 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1870 001a 002B     		cmp	r3, #0
 1871 001c 04D0     		beq	.L83
 1872              		.loc 1 956 0 is_stmt 0 discriminator 1
 1873 001e 7B68     		ldr	r3, [r7, #4]
 1874 0020 DB7B     		ldrb	r3, [r3, #15]	@ zero_extendqisi2
 1875 0022 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1876 0024 9A42     		cmp	r2, r3
 1877 0026 03D9     		bls	.L84
 1878              	.L83:
 957:../Dave/Generated/src/CAN001/CAN001.c ****   {
 958:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)CAN001_MO_NOT_FOUND;
 1879              		.loc 1 958 0 is_stmt 1
 1880 0028 4FF00203 		mov	r3, #2
 1881 002c FB60     		str	r3, [r7, #12]
 1882 002e 1BE0     		b	.L85
 1883              	.L84:
 959:../Dave/Generated/src/CAN001/CAN001.c ****     ERROR(DBG002_GID_CAN001,Status, 0, NULL);
 960:../Dave/Generated/src/CAN001/CAN001.c ****   }
 961:../Dave/Generated/src/CAN001/CAN001.c ****   else
 962:../Dave/Generated/src/CAN001/CAN001.c ****   {
 963:../Dave/Generated/src/CAN001/CAN001.c ****     MsgPndRegOffset = GET_MSGPND_OFFSET(Handle->NodeID);
 1884              		.loc 1 963 0
 1885 0030 7B68     		ldr	r3, [r7, #4]
 1886 0032 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 1887 0034 1A46     		mov	r2, r3
 1888 0036 45F25003 		movw	r3, #20560
 1889 003a C1F20023 		movt	r3, 4608
 1890 003e D318     		adds	r3, r2, r3
 1891 0040 4FEA8303 		lsl	r3, r3, #2
 1892 0044 BB60     		str	r3, [r7, #8]
 964:../Dave/Generated/src/CAN001/CAN001.c ****     CLR_BIT((*MsgPndRegOffset), (MsgObjnr-1U));
 1893              		.loc 1 964 0
 1894 0046 BB68     		ldr	r3, [r7, #8]
 1895 0048 1A68     		ldr	r2, [r3, #0]
 1896 004a FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1897 004c 03F1FF33 		add	r3, r3, #-1
 1898 0050 4FF00101 		mov	r1, #1
 1899 0054 01FA03F3 		lsl	r3, r1, r3
 1900 0058 6FEA0303 		mvn	r3, r3
 1901 005c 1A40     		ands	r2, r2, r3
 1902 005e BB68     		ldr	r3, [r7, #8]
 1903 0060 1A60     		str	r2, [r3, #0]
 965:../Dave/Generated/src/CAN001/CAN001.c ****     Status = (uint32_t)DAVEApp_SUCCESS;
 1904              		.loc 1 965 0
 1905 0062 4FF00003 		mov	r3, #0
 1906 0066 FB60     		str	r3, [r7, #12]
 1907              	.L85:
 966:../Dave/Generated/src/CAN001/CAN001.c ****   }
 967:../Dave/Generated/src/CAN001/CAN001.c ****   DBG002_FUNCTION_EXIT(DBG002_GID_CAN001,CAN001_FUNCTION_EXIT);
 968:../Dave/Generated/src/CAN001/CAN001.c ****   return Status;
 1908              		.loc 1 968 0
 1909 0068 FB68     		ldr	r3, [r7, #12]
 969:../Dave/Generated/src/CAN001/CAN001.c **** }
 1910              		.loc 1 969 0
 1911 006a 1846     		mov	r0, r3
 1912 006c 07F11407 		add	r7, r7, #20
 1913 0070 BD46     		mov	sp, r7
 1914 0072 80BC     		pop	{r7}
 1915 0074 7047     		bx	lr
 1916              		.cfi_endproc
 1917              	.LFE128:
 1919 0076 00BF     		.text
 1920              	.Letext0:
 1921              		.file 2 "c:\\dave-3.1.8\\dave-3.1.8\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-
 1922              		.file 3 "C:\\DAVE-3.1.8\\DAVE-3.1.8\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1923              		.file 4 "D:\\DAVE3_workspace\\ws\\jjj\\Dave\\Generated\\inc\\DAVESupport/../../inc/LIBS/types.h"
 1924              		.file 5 "D:\\DAVE3_workspace\\ws\\jjj\\Dave\\Generated\\inc\\DAVESupport/../../inc/CAN001/CAN_Type
 1925              		.file 6 "D:\\DAVE3_workspace\\ws\\jjj\\Dave\\Generated\\inc\\DAVESupport/../../inc/CAN001/CAN001.h
 1926              		.file 7 "C:\\DAVE-3.1.8\\DAVE-3.1.8\\eclipse\\/../CMSIS/Include/core_cm4.h"
 1927              		.file 8 "D:\\DAVE3_workspace\\ws\\jjj\\Dave\\Generated\\inc\\DAVESupport/../../inc/CAN001/CAN001_C
DEFINED SYMBOLS
                            *ABS*:00000000 CAN001.c
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:20     .text.CAN001_lAllocateMOtoNodeList:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:24     .text.CAN001_lAllocateMOtoNodeList:00000000 CAN001_lAllocateMOtoNodeList
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:80     .text.CAN001_lDeallocateMsgObj:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:84     .text.CAN001_lDeallocateMsgObj:00000000 CAN001_lDeallocateMsgObj
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:144    .text.CAN001_lConfigMORegs:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:148    .text.CAN001_lConfigMORegs:00000000 CAN001_lConfigMORegs
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:375    .text.CAN001_lNodeInit:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:379    .text.CAN001_lNodeInit:00000000 CAN001_lNodeInit
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:528    .text.CAN001_Init:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:533    .text.CAN001_Init:00000000 CAN001_Init
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:746    .text.CAN001_ConfigMsgObj:00000000 CAN001_ConfigMsgObj
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:590    .text.CAN001_NodeDeInit:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:595    .text.CAN001_NodeDeInit:00000000 CAN001_NodeDeInit
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:741    .text.CAN001_ConfigMsgObj:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:864    .text.CAN001_SendDataFrame:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:869    .text.CAN001_SendDataFrame:00000000 CAN001_SendDataFrame
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:963    .text.CAN001_SendRemoteFrame:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:968    .text.CAN001_SendRemoteFrame:00000000 CAN001_SendRemoteFrame
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1062   .text.CAN001_ReadMsgObj:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1067   .text.CAN001_ReadMsgObj:00000000 CAN001_ReadMsgObj
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1331   .text.CAN001_UpdateMODataRegisters:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1336   .text.CAN001_UpdateMODataRegisters:00000000 CAN001_UpdateMODataRegisters
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1514   .text.CAN001_GetMOFlagStatus:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1519   .text.CAN001_GetMOFlagStatus:00000000 CAN001_GetMOFlagStatus
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1587   .text.CAN001_GetNodeFlagStatus:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1592   .text.CAN001_GetNodeFlagStatus:00000000 CAN001_GetNodeFlagStatus
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1647   .text.CAN001_GetMOPndRegisterBitStatus:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1652   .text.CAN001_GetMOPndRegisterBitStatus:00000000 CAN001_GetMOPndRegisterBitStatus
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1708   .text.CAN001_ClearMOFlagStatus:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1713   .text.CAN001_ClearMOFlagStatus:00000000 CAN001_ClearMOFlagStatus
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1790   .text.CAN001_ClearNodeFlagStatus:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1795   .text.CAN001_ClearNodeFlagStatus:00000000 CAN001_ClearNodeFlagStatus
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1837   .text.CAN001_ClearMOPndRegisterBit:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\ccv4M1Bq.s:1842   .text.CAN001_ClearMOPndRegisterBit:00000000 CAN001_ClearMOPndRegisterBit
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.2b180dddedb01d2657948e7c599ffc4b
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.56.306df69fa5fe20f9057853cf3efa51a9
                           .group:00000000 wm4.MULTIPLEXER.h.45.f64ca92d72393a8beea4bac839d9ba32
                           .group:00000000 wm4.CCU8PWMLIB.h.69.6fc7028fa5cec90e04e15540cf2324e9
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.CAN_Types.h.39.c1885d4e8823aca0b17273f52e39394e
                           .group:00000000 wm4.CAN001.h.73.2867c30dc9ce1f649c22907bb7f1ae00
                           .group:00000000 wm4.CAN001_Conf.h.47.6b224a0bfbf8bcde5b198cce051155fa
                           .group:00000000 wm4.CAN001.h.1156.897d05c6ebe0c8769b48e0de7c315928
                           .group:00000000 wm4.NVIC002.h.59.48c35978ed54e4015de10feda9cef27c

UNDEFINED SYMBOLS
CANGLOBAL_Init
CAN001_Handle0
CAN001_MessageHandle0_1
CAN001_MessageHandle0_2
