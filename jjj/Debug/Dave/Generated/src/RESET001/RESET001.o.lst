   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.fpu fpv4-sp-d16
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 6
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.thumb
  15              		.file	"RESET001.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.RESET001_AssertReset,"ax",%progbits
  20              		.align	2
  21              		.global	RESET001_AssertReset
  22              		.thumb
  23              		.thumb_func
  25              	RESET001_AssertReset:
  26              	.LFB112:
  27              		.file 1 "../Dave/Generated/src/RESET001/RESET001.c"
   1:../Dave/Generated/src/RESET001/RESET001.c **** /*******************************************************************************
   2:../Dave/Generated/src/RESET001/RESET001.c **** **  DAVE App Name : RESET001       App Version: 1.0.10               
   3:../Dave/Generated/src/RESET001/RESET001.c **** **  This file is generated by DAVE, User modification to this file will be    **
   4:../Dave/Generated/src/RESET001/RESET001.c **** **  overwritten at the next code generation.                                  **
   5:../Dave/Generated/src/RESET001/RESET001.c **** *******************************************************************************/
   6:../Dave/Generated/src/RESET001/RESET001.c **** 
   7:../Dave/Generated/src/RESET001/RESET001.c **** /*CODE_BLOCK_BEGIN[RESET001.c]*/
   8:../Dave/Generated/src/RESET001/RESET001.c **** 
   9:../Dave/Generated/src/RESET001/RESET001.c **** /*******************************************************************************
  10:../Dave/Generated/src/RESET001/RESET001.c ****  Copyright (c) 2011, Infineon Technologies AG                                 **
  11:../Dave/Generated/src/RESET001/RESET001.c ****  All rights reserved.                                                         **
  12:../Dave/Generated/src/RESET001/RESET001.c ****                                                                               **
  13:../Dave/Generated/src/RESET001/RESET001.c ****  Redistribution and use in source and binary forms, with or without           **
  14:../Dave/Generated/src/RESET001/RESET001.c ****  modification,are permitted provided that the following conditions are met:   **
  15:../Dave/Generated/src/RESET001/RESET001.c ****                                                                               **
  16:../Dave/Generated/src/RESET001/RESET001.c ****  *Redistributions of source code must retain the above copyright notice,      **
  17:../Dave/Generated/src/RESET001/RESET001.c ****  this list of conditions and the following disclaimer.                        **
  18:../Dave/Generated/src/RESET001/RESET001.c ****  *Redistributions in binary form must reproduce the above copyright notice,   **
  19:../Dave/Generated/src/RESET001/RESET001.c ****  this list of conditions and the following disclaimer in the documentation    **
  20:../Dave/Generated/src/RESET001/RESET001.c ****  and/or other materials provided with the distribution.                       **
  21:../Dave/Generated/src/RESET001/RESET001.c ****  *Neither the name of the copyright holders nor the names of its contributors **
  22:../Dave/Generated/src/RESET001/RESET001.c ****  may be used to endorse or promote products derived from this software without** 
  23:../Dave/Generated/src/RESET001/RESET001.c ****  specific prior written permission.                                           **
  24:../Dave/Generated/src/RESET001/RESET001.c ****                                                                               **
  25:../Dave/Generated/src/RESET001/RESET001.c ****  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  **
  26:../Dave/Generated/src/RESET001/RESET001.c ****  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    **
  27:../Dave/Generated/src/RESET001/RESET001.c ****  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   **
  28:../Dave/Generated/src/RESET001/RESET001.c ****  ARE  DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE   **
  29:../Dave/Generated/src/RESET001/RESET001.c ****  LIABLE  FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR         **
  30:../Dave/Generated/src/RESET001/RESET001.c ****  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF         **
  31:../Dave/Generated/src/RESET001/RESET001.c ****  SUBSTITUTE GOODS OR  SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS    **
  32:../Dave/Generated/src/RESET001/RESET001.c ****  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN      **
  33:../Dave/Generated/src/RESET001/RESET001.c ****  CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)       **
  34:../Dave/Generated/src/RESET001/RESET001.c ****  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   **
  35:../Dave/Generated/src/RESET001/RESET001.c ****  POSSIBILITY OF SUCH DAMAGE.                                                  **
  36:../Dave/Generated/src/RESET001/RESET001.c ****                                                                               **
  37:../Dave/Generated/src/RESET001/RESET001.c ****  To improve the quality of the software, users are encouraged to share        **
  38:../Dave/Generated/src/RESET001/RESET001.c ****  modifications, enhancements or bug fixes with Infineon Technologies AG       **
  39:../Dave/Generated/src/RESET001/RESET001.c ****  dave@infineon.com).                                                          **
  40:../Dave/Generated/src/RESET001/RESET001.c ****                                                                               **
  41:../Dave/Generated/src/RESET001/RESET001.c **** ********************************************************************************
  42:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                            **
  43:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                            **
  44:../Dave/Generated/src/RESET001/RESET001.c **** ** PLATFORM : Infineon XMC4000 Series   			              **
  45:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                            **
  46:../Dave/Generated/src/RESET001/RESET001.c **** ** COMPILER : Compiler Independent                                            **
  47:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                            **
  48:../Dave/Generated/src/RESET001/RESET001.c **** ** AUTHOR   : App Developer                                                   **
  49:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                            **
  50:../Dave/Generated/src/RESET001/RESET001.c **** ** MAY BE CHANGED BY USER [yes/no]: Yes                                       **
  51:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                            **
  52:../Dave/Generated/src/RESET001/RESET001.c **** ** MODIFICATION DATE : Nov 22, 2012                                           **
  53:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                            **
  54:../Dave/Generated/src/RESET001/RESET001.c **** *******************************************************************************/
  55:../Dave/Generated/src/RESET001/RESET001.c **** 
  56:../Dave/Generated/src/RESET001/RESET001.c **** /******************************************************************************
  57:../Dave/Generated/src/RESET001/RESET001.c **** **                      Author(s) Identity                                   **
  58:../Dave/Generated/src/RESET001/RESET001.c **** *******************************************************************************
  59:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                           **
  60:../Dave/Generated/src/RESET001/RESET001.c **** ** Initials     Name                                                         **
  61:../Dave/Generated/src/RESET001/RESET001.c **** ** --------------------------------------------------------------------------**
  62:../Dave/Generated/src/RESET001/RESET001.c **** ** BT         App Developer                                                  **
  63:../Dave/Generated/src/RESET001/RESET001.c **** **                                                                           **
  64:../Dave/Generated/src/RESET001/RESET001.c **** *******************************************************************************/
  65:../Dave/Generated/src/RESET001/RESET001.c **** /**
  66:../Dave/Generated/src/RESET001/RESET001.c ****  * @file RESET001.c
  67:../Dave/Generated/src/RESET001/RESET001.c ****  * 
  68:../Dave/Generated/src/RESET001/RESET001.c ****  * @App    Version RESET001 <1.0.10>
  69:../Dave/Generated/src/RESET001/RESET001.c ****  *
  70:../Dave/Generated/src/RESET001/RESET001.c ****  * @brief  Reset App implementation.
  71:../Dave/Generated/src/RESET001/RESET001.c ****  *
  72:../Dave/Generated/src/RESET001/RESET001.c ****  */
  73:../Dave/Generated/src/RESET001/RESET001.c **** /*******************************************************************************
  74:../Dave/Generated/src/RESET001/RESET001.c ****  ** INCLUDE FILES                                                             **
  75:../Dave/Generated/src/RESET001/RESET001.c ****  ******************************************************************************/
  76:../Dave/Generated/src/RESET001/RESET001.c **** 
  77:../Dave/Generated/src/RESET001/RESET001.c **** 
  78:../Dave/Generated/src/RESET001/RESET001.c **** /** Inclusion of header file */
  79:../Dave/Generated/src/RESET001/RESET001.c **** #include <DAVE3.h>
  80:../Dave/Generated/src/RESET001/RESET001.c **** 
  81:../Dave/Generated/src/RESET001/RESET001.c **** 
  82:../Dave/Generated/src/RESET001/RESET001.c **** /*******************************************************************************
  83:../Dave/Generated/src/RESET001/RESET001.c **** **                      Private Macro Definitions                             **
  84:../Dave/Generated/src/RESET001/RESET001.c **** *******************************************************************************/
  85:../Dave/Generated/src/RESET001/RESET001.c **** /* Invalid Input */
  86:../Dave/Generated/src/RESET001/RESET001.c **** #define RCU_INVALID_INPUT  0x0000000FU
  87:../Dave/Generated/src/RESET001/RESET001.c **** /** To check bit value is 1 */ 
  88:../Dave/Generated/src/RESET001/RESET001.c **** #define RCU_SET   1U
  89:../Dave/Generated/src/RESET001/RESET001.c **** /** To check bit value is 0 */
  90:../Dave/Generated/src/RESET001/RESET001.c **** #define RCU_RESET   0U
  91:../Dave/Generated/src/RESET001/RESET001.c **** /** Clear BitMask  */
  92:../Dave/Generated/src/RESET001/RESET001.c **** #define CLEAR_BITMASK	0xF0000000U
  93:../Dave/Generated/src/RESET001/RESET001.c **** /** Reset BitMask */
  94:../Dave/Generated/src/RESET001/RESET001.c **** #define RESET_BITMASK   0x0FFFFFFFU
  95:../Dave/Generated/src/RESET001/RESET001.c **** 
  96:../Dave/Generated/src/RESET001/RESET001.c **** /** @ingroup RESET001 Func
  97:../Dave/Generated/src/RESET001/RESET001.c ****  * @{
  98:../Dave/Generated/src/RESET001/RESET001.c ****  */
  99:../Dave/Generated/src/RESET001/RESET001.c **** 
 100:../Dave/Generated/src/RESET001/RESET001.c **** /*******************************************************************************
 101:../Dave/Generated/src/RESET001/RESET001.c **** **                      Public Function Definitions                           **
 102:../Dave/Generated/src/RESET001/RESET001.c **** *******************************************************************************/
 103:../Dave/Generated/src/RESET001/RESET001.c **** 
 104:../Dave/Generated/src/RESET001/RESET001.c **** 
 105:../Dave/Generated/src/RESET001/RESET001.c **** /** @ingroup RESET001 Func
 106:../Dave/Generated/src/RESET001/RESET001.c ****  * @{
 107:../Dave/Generated/src/RESET001/RESET001.c ****  */
 108:../Dave/Generated/src/RESET001/RESET001.c ****  
 109:../Dave/Generated/src/RESET001/RESET001.c ****  /* This function is to enable reset of peripheral by software  */
 110:../Dave/Generated/src/RESET001/RESET001.c ****  
 111:../Dave/Generated/src/RESET001/RESET001.c ****  void RESET001_AssertReset(RESET001_ResetnType Resetn)
 112:../Dave/Generated/src/RESET001/RESET001.c ****  {
  28              		.loc 1 112 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 80B4     		push	{r7}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 87B0     		sub	sp, sp, #28
  38              	.LCFI1:
  39              		.cfi_def_cfa_offset 32
  40 0004 00AF     		add	r7, sp, #0
  41              	.LCFI2:
  42              		.cfi_def_cfa_register 7
  43 0006 7860     		str	r0, [r7, #4]
 113:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t* RCUControlReg = 0U;
  44              		.loc 1 113 0
  45 0008 4FF00003 		mov	r3, #0
  46 000c 7B61     		str	r3, [r7, #20]
 114:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t Temp = 0U ;
  47              		.loc 1 114 0
  48 000e 4FF00003 		mov	r3, #0
  49 0012 3B61     		str	r3, [r7, #16]
 115:../Dave/Generated/src/RESET001/RESET001.c ****   /* <<<DD_RESET001_API_1>>> */
 116:../Dave/Generated/src/RESET001/RESET001.c ****   SCU_RESET_TypeDef* RCUCtrlReg = SCU_RESET;
  50              		.loc 1 116 0
  51 0014 4FF48843 		mov	r3, #17408
  52 0018 C5F20003 		movt	r3, 20480
  53 001c FB60     		str	r3, [r7, #12]
 117:../Dave/Generated/src/RESET001/RESET001.c ****   Temp = ((uint32_t)Resetn & CLEAR_BITMASK) >> 28;
  54              		.loc 1 117 0
  55 001e 7B68     		ldr	r3, [r7, #4]
  56 0020 4FEA1373 		lsr	r3, r3, #28
  57 0024 3B61     		str	r3, [r7, #16]
 118:../Dave/Generated/src/RESET001/RESET001.c ****   RCUControlReg = (uint32_t*)((uint32_t)(&RCUCtrlReg->PRSET0) + ( 0x0000000CU * Temp));
  58              		.loc 1 118 0
  59 0026 FB68     		ldr	r3, [r7, #12]
  60 0028 03F11003 		add	r3, r3, #16
  61 002c 1946     		mov	r1, r3
  62 002e 3A69     		ldr	r2, [r7, #16]
  63 0030 1346     		mov	r3, r2
  64 0032 4FEA4303 		lsl	r3, r3, #1
  65 0036 9B18     		adds	r3, r3, r2
  66 0038 4FEA8303 		lsl	r3, r3, #2
  67 003c CB18     		adds	r3, r1, r3
  68 003e 7B61     		str	r3, [r7, #20]
 119:../Dave/Generated/src/RESET001/RESET001.c ****   *RCUControlReg = ((uint32_t)Resetn & RESET_BITMASK );
  69              		.loc 1 119 0
  70 0040 7B68     		ldr	r3, [r7, #4]
  71 0042 23F07042 		bic	r2, r3, #-268435456
  72 0046 7B69     		ldr	r3, [r7, #20]
  73 0048 1A60     		str	r2, [r3, #0]
 120:../Dave/Generated/src/RESET001/RESET001.c **** }
  74              		.loc 1 120 0
  75 004a 07F11C07 		add	r7, r7, #28
  76 004e BD46     		mov	sp, r7
  77 0050 80BC     		pop	{r7}
  78 0052 7047     		bx	lr
  79              		.cfi_endproc
  80              	.LFE112:
  82              		.section	.text.RESET001_DeassertReset,"ax",%progbits
  83              		.align	2
  84              		.global	RESET001_DeassertReset
  85              		.thumb
  86              		.thumb_func
  88              	RESET001_DeassertReset:
  89              	.LFB113:
 121:../Dave/Generated/src/RESET001/RESET001.c **** 
 122:../Dave/Generated/src/RESET001/RESET001.c **** /* API to get the  reason of last reset */	
 123:../Dave/Generated/src/RESET001/RESET001.c **** 
 124:../Dave/Generated/src/RESET001/RESET001.c **** void RESET001_DeassertReset(RESET001_ResetnType Resetn)
 125:../Dave/Generated/src/RESET001/RESET001.c **** {
  90              		.loc 1 125 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 24
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              	.LCFI3:
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 7, -4
  99 0002 87B0     		sub	sp, sp, #28
 100              	.LCFI4:
 101              		.cfi_def_cfa_offset 32
 102 0004 00AF     		add	r7, sp, #0
 103              	.LCFI5:
 104              		.cfi_def_cfa_register 7
 105 0006 7860     		str	r0, [r7, #4]
 126:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t* RCUControlReg = 0UL;
 106              		.loc 1 126 0
 107 0008 4FF00003 		mov	r3, #0
 108 000c 7B61     		str	r3, [r7, #20]
 127:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t Temp = 0UL;
 109              		.loc 1 127 0
 110 000e 4FF00003 		mov	r3, #0
 111 0012 3B61     		str	r3, [r7, #16]
 128:../Dave/Generated/src/RESET001/RESET001.c ****   /* <<<DD_RESET001_API_2>>> */
 129:../Dave/Generated/src/RESET001/RESET001.c ****   SCU_RESET_TypeDef* RCUCtrlReg = SCU_RESET;  
 112              		.loc 1 129 0
 113 0014 4FF48843 		mov	r3, #17408
 114 0018 C5F20003 		movt	r3, 20480
 115 001c FB60     		str	r3, [r7, #12]
 130:../Dave/Generated/src/RESET001/RESET001.c ****   Temp = ((uint32_t)Resetn & CLEAR_BITMASK) >> 28;
 116              		.loc 1 130 0
 117 001e 7B68     		ldr	r3, [r7, #4]
 118 0020 4FEA1373 		lsr	r3, r3, #28
 119 0024 3B61     		str	r3, [r7, #16]
 131:../Dave/Generated/src/RESET001/RESET001.c ****   RCUControlReg = (uint32_t*)((uint32_t)(&RCUCtrlReg->PRCLR0) + ( 0x0000000CU * Temp));
 120              		.loc 1 131 0
 121 0026 FB68     		ldr	r3, [r7, #12]
 122 0028 03F11403 		add	r3, r3, #20
 123 002c 1946     		mov	r1, r3
 124 002e 3A69     		ldr	r2, [r7, #16]
 125 0030 1346     		mov	r3, r2
 126 0032 4FEA4303 		lsl	r3, r3, #1
 127 0036 9B18     		adds	r3, r3, r2
 128 0038 4FEA8303 		lsl	r3, r3, #2
 129 003c CB18     		adds	r3, r1, r3
 130 003e 7B61     		str	r3, [r7, #20]
 132:../Dave/Generated/src/RESET001/RESET001.c ****   *RCUControlReg = ((uint32_t)Resetn & RESET_BITMASK) ;
 131              		.loc 1 132 0
 132 0040 7B68     		ldr	r3, [r7, #4]
 133 0042 23F07042 		bic	r2, r3, #-268435456
 134 0046 7B69     		ldr	r3, [r7, #20]
 135 0048 1A60     		str	r2, [r3, #0]
 133:../Dave/Generated/src/RESET001/RESET001.c **** }
 136              		.loc 1 133 0
 137 004a 07F11C07 		add	r7, r7, #28
 138 004e BD46     		mov	sp, r7
 139 0050 80BC     		pop	{r7}
 140 0052 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE113:
 144              		.section	.text.RESET001_GetResetInfo,"ax",%progbits
 145              		.align	2
 146              		.global	RESET001_GetResetInfo
 147              		.thumb
 148              		.thumb_func
 150              	RESET001_GetResetInfo:
 151              	.LFB114:
 134:../Dave/Generated/src/RESET001/RESET001.c **** 	
 135:../Dave/Generated/src/RESET001/RESET001.c **** /* API to get the  reason of last reset. */
 136:../Dave/Generated/src/RESET001/RESET001.c **** RESET001_InfoType RESET001_GetResetInfo()
 137:../Dave/Generated/src/RESET001/RESET001.c **** {
 152              		.loc 1 137 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 8
 155              		@ frame_needed = 1, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157 0000 80B4     		push	{r7}
 158              	.LCFI6:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 7, -4
 161 0002 83B0     		sub	sp, sp, #12
 162              	.LCFI7:
 163              		.cfi_def_cfa_offset 16
 164 0004 00AF     		add	r7, sp, #0
 165              	.LCFI8:
 166              		.cfi_def_cfa_register 7
 138:../Dave/Generated/src/RESET001/RESET001.c ****   SCU_RESET_TypeDef* RCUCtrlReg = SCU_RESET;
 167              		.loc 1 138 0
 168 0006 4FF48843 		mov	r3, #17408
 169 000a C5F20003 		movt	r3, 20480
 170 000e 7B60     		str	r3, [r7, #4]
 139:../Dave/Generated/src/RESET001/RESET001.c ****  /* <<<DD_RESET001_API_4>>> */
 140:../Dave/Generated/src/RESET001/RESET001.c ****   return (RESET001_InfoType)(RCUCtrlReg->RSTSTAT  &  SCU_RESET_RSTSTAT_RSTSTAT_Msk);
 171              		.loc 1 140 0
 172 0010 7B68     		ldr	r3, [r7, #4]
 173 0012 1B68     		ldr	r3, [r3, #0]
 174 0014 DBB2     		uxtb	r3, r3
 141:../Dave/Generated/src/RESET001/RESET001.c **** }
 175              		.loc 1 141 0
 176 0016 1846     		mov	r0, r3
 177 0018 07F10C07 		add	r7, r7, #12
 178 001c BD46     		mov	sp, r7
 179 001e 80BC     		pop	{r7}
 180 0020 7047     		bx	lr
 181              		.cfi_endproc
 182              	.LFE114:
 184 0022 00BF     		.section	.text.RESET001_GetStatus,"ax",%progbits
 185              		.align	2
 186              		.global	RESET001_GetStatus
 187              		.thumb
 188              		.thumb_func
 190              	RESET001_GetStatus:
 191              	.LFB115:
 142:../Dave/Generated/src/RESET001/RESET001.c **** 		
 143:../Dave/Generated/src/RESET001/RESET001.c **** /* Get the reset status of the peripheral */		
 144:../Dave/Generated/src/RESET001/RESET001.c **** status_t RESET001_GetStatus(RESET001_ResetnType Resetn)
 145:../Dave/Generated/src/RESET001/RESET001.c **** {
 192              		.loc 1 145 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 32
 195              		@ frame_needed = 1, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197 0000 80B4     		push	{r7}
 198              	.LCFI9:
 199              		.cfi_def_cfa_offset 4
 200              		.cfi_offset 7, -4
 201 0002 89B0     		sub	sp, sp, #36
 202              	.LCFI10:
 203              		.cfi_def_cfa_offset 40
 204 0004 00AF     		add	r7, sp, #0
 205              	.LCFI11:
 206              		.cfi_def_cfa_register 7
 207 0006 7860     		str	r0, [r7, #4]
 146:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t status = RCU_INVALID_INPUT;
 208              		.loc 1 146 0
 209 0008 4FF00F03 		mov	r3, #15
 210 000c FB61     		str	r3, [r7, #28]
 147:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t* RCUControlReg = 0U;
 211              		.loc 1 147 0
 212 000e 4FF00003 		mov	r3, #0
 213 0012 BB61     		str	r3, [r7, #24]
 148:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t Temp = 0U;
 214              		.loc 1 148 0
 215 0014 4FF00003 		mov	r3, #0
 216 0018 7B61     		str	r3, [r7, #20]
 149:../Dave/Generated/src/RESET001/RESET001.c ****   uint32_t Getstatus = 0U;
 217              		.loc 1 149 0
 218 001a 4FF00003 		mov	r3, #0
 219 001e 3B61     		str	r3, [r7, #16]
 150:../Dave/Generated/src/RESET001/RESET001.c ****   /* <<<DD_RESET001_API_3>>> */
 151:../Dave/Generated/src/RESET001/RESET001.c ****   SCU_RESET_TypeDef* RCUCtrlReg = SCU_RESET;
 220              		.loc 1 151 0
 221 0020 4FF48843 		mov	r3, #17408
 222 0024 C5F20003 		movt	r3, 20480
 223 0028 FB60     		str	r3, [r7, #12]
 152:../Dave/Generated/src/RESET001/RESET001.c ****   Temp = ((uint32_t)Resetn & CLEAR_BITMASK) >> 28;	
 224              		.loc 1 152 0
 225 002a 7B68     		ldr	r3, [r7, #4]
 226 002c 4FEA1373 		lsr	r3, r3, #28
 227 0030 7B61     		str	r3, [r7, #20]
 153:../Dave/Generated/src/RESET001/RESET001.c ****   RCUControlReg = (uint32_t*)((uint32_t)(&RCUCtrlReg->PRSTAT0) + ( 0x0000000CU * Temp));
 228              		.loc 1 153 0
 229 0032 FB68     		ldr	r3, [r7, #12]
 230 0034 03F10C03 		add	r3, r3, #12
 231 0038 1946     		mov	r1, r3
 232 003a 7A69     		ldr	r2, [r7, #20]
 233 003c 1346     		mov	r3, r2
 234 003e 4FEA4303 		lsl	r3, r3, #1
 235 0042 9B18     		adds	r3, r3, r2
 236 0044 4FEA8303 		lsl	r3, r3, #2
 237 0048 CB18     		adds	r3, r1, r3
 238 004a BB61     		str	r3, [r7, #24]
 154:../Dave/Generated/src/RESET001/RESET001.c ****   Getstatus	 = (uint32_t)((*RCUControlReg) & (uint32_t)Resetn & RESET_BITMASK) ;
 239              		.loc 1 154 0
 240 004c BB69     		ldr	r3, [r7, #24]
 241 004e 1A68     		ldr	r2, [r3, #0]
 242 0050 7B68     		ldr	r3, [r7, #4]
 243 0052 1340     		ands	r3, r3, r2
 244 0054 23F07043 		bic	r3, r3, #-268435456
 245 0058 3B61     		str	r3, [r7, #16]
 155:../Dave/Generated/src/RESET001/RESET001.c ****   if(Getstatus != 0U)
 246              		.loc 1 155 0
 247 005a 3B69     		ldr	r3, [r7, #16]
 248 005c 002B     		cmp	r3, #0
 249 005e 03D0     		beq	.L6
 156:../Dave/Generated/src/RESET001/RESET001.c ****   {
 157:../Dave/Generated/src/RESET001/RESET001.c **** 	  status = RCU_SET;
 250              		.loc 1 157 0
 251 0060 4FF00103 		mov	r3, #1
 252 0064 FB61     		str	r3, [r7, #28]
 253 0066 02E0     		b	.L7
 254              	.L6:
 158:../Dave/Generated/src/RESET001/RESET001.c ****   }
 159:../Dave/Generated/src/RESET001/RESET001.c ****   else
 160:../Dave/Generated/src/RESET001/RESET001.c ****   {
 161:../Dave/Generated/src/RESET001/RESET001.c **** 	  status = RCU_RESET;
 255              		.loc 1 161 0
 256 0068 4FF00003 		mov	r3, #0
 257 006c FB61     		str	r3, [r7, #28]
 258              	.L7:
 162:../Dave/Generated/src/RESET001/RESET001.c ****   }
 163:../Dave/Generated/src/RESET001/RESET001.c ****   return status;
 259              		.loc 1 163 0
 260 006e FB69     		ldr	r3, [r7, #28]
 164:../Dave/Generated/src/RESET001/RESET001.c **** }
 261              		.loc 1 164 0
 262 0070 1846     		mov	r0, r3
 263 0072 07F12407 		add	r7, r7, #36
 264 0076 BD46     		mov	sp, r7
 265 0078 80BC     		pop	{r7}
 266 007a 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE115:
 270              		.text
 271              	.Letext0:
 272              		.file 2 "c:\\dave-3.1.8\\dave-3.1.8\\arm-gcc\\bin\\../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-
 273              		.file 3 "C:\\DAVE-3.1.8\\DAVE-3.1.8\\eclipse\\/../CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 274              		.file 4 "D:\\DAVE3_workspace\\ws\\jjj\\Dave\\Generated\\inc\\DAVESupport/../../inc/LIBS/types.h"
 275              		.file 5 "D:\\DAVE3_workspace\\ws\\jjj\\Dave\\Generated\\inc\\DAVESupport/../../inc/RESET001/RESET0
 276              		.file 6 "C:\\DAVE-3.1.8\\DAVE-3.1.8\\eclipse\\/../CMSIS/Include/core_cm4.h"
DEFINED SYMBOLS
                            *ABS*:00000000 RESET001.c
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:20     .text.RESET001_AssertReset:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:25     .text.RESET001_AssertReset:00000000 RESET001_AssertReset
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:83     .text.RESET001_DeassertReset:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:88     .text.RESET001_DeassertReset:00000000 RESET001_DeassertReset
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:145    .text.RESET001_GetResetInfo:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:150    .text.RESET001_GetResetInfo:00000000 RESET001_GetResetInfo
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:185    .text.RESET001_GetStatus:00000000 $t
C:\DOCUME~1\ADMINI~1\LOCALS~1\Temp\cc74RFzb.s:190    .text.RESET001_GetStatus:00000000 RESET001_GetStatus
                     .debug_frame:00000010 $d
                           .group:00000000 wm4.1.2b180dddedb01d2657948e7c599ffc4b
                           .group:00000000 wm4.XMC4500.h.45.215f4b8c79f46c7645c15373868d08c0
                           .group:00000000 wm4.core_cm4.h.47.41af406cb4cda82c972f112a9cd0a024
                           .group:00000000 wm4.newlib.h.8.a9901dc52d1357e3e94003403d43f8b5
                           .group:00000000 wm4.features.h.22.b72b3baab2bb2eab3661375590100b6b
                           .group:00000000 wm4.config.h.193.5fb8ef056cdff92dec3dee9552839d8c
                           .group:00000000 wm4._ansi.h.23.7aefdac4826acebbfc9f3822a0aeb14c
                           .group:00000000 wm4.stdint.h.20.54ad762faa59e3c05491630641c8d8bf
                           .group:00000000 wm4.core_cmInstr.h.39.3d3d1b4a79aef37532666dc6ee87c6ac
                           .group:00000000 wm4.core_cm4_simd.h.43.b5d1d38735af6366227b4256d330cf13
                           .group:00000000 wm4.core_cm4.h.178.e5ef5ce66d198d7f00f9d0076e267c41
                           .group:00000000 wm4.system_XMC4500.h.29.827f68baa362c84f2abae4ab67dde7c9
                           .group:00000000 wm4.XMC4500.h.198.8e022f279ff353ed081df898dc7b9cf3
                           .group:00000000 wm4.stddef.h.40.50cf36416e06376af8a9dca28536f2e4
                           .group:00000000 wm4.types.h.56.306df69fa5fe20f9057853cf3efa51a9
                           .group:00000000 wm4.MULTIPLEXER.h.45.f64ca92d72393a8beea4bac839d9ba32
                           .group:00000000 wm4.CCU8PWMLIB.h.69.6fc7028fa5cec90e04e15540cf2324e9
                           .group:00000000 wm4.MOTORLIB.h.62.951091d95913dd2ff36d761323a1771d
                           .group:00000000 wm4.DBG001.h.116.d6d9e7459a0faa3905c97c1d2edb339d
                           .group:00000000 wm4.CAN_Types.h.39.c1885d4e8823aca0b17273f52e39394e
                           .group:00000000 wm4.CAN001.h.73.2867c30dc9ce1f649c22907bb7f1ae00
                           .group:00000000 wm4.CAN001_Conf.h.47.6b224a0bfbf8bcde5b198cce051155fa
                           .group:00000000 wm4.CAN001.h.1156.897d05c6ebe0c8769b48e0de7c315928
                           .group:00000000 wm4.NVIC002.h.59.48c35978ed54e4015de10feda9cef27c

NO UNDEFINED SYMBOLS
